{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Game 2D Water Kit For Unity \u00b6 Create beautiful and dynamic water and waterfall systems \u00b6 Game 2D Water Kit is a plugin for Unity that allows you to create fast, dynamic, and nice-looking 2D water and waterfalls. Supported Unity versions \u00b6 Unity 2017.4 or newer are supported. Note Supports the Builtin (Default) Render Pipeline (Unity 2017.4 or later), the Lightweight Render Pipeline 6.7 or higher, 2D Renderer (Unity 2019.2) and the Universal Render Pipeline, 2D Renderer (Unity 2019.3 or later). Key Features \u00b6 Highly customizable water and waterfall systems Seamless integration into the Sprite workflow: Easily sort the water/waterfall object relative to sprites using sorting layers Hide or reveal parts of the water/waterfall object using Sprite Masks and Mesh Masks Quickly tweak and test the water and the waterfall simulation properties in edit-mode Well-integrated into the Unity Editor with clean and well-organized inspectors Top performance across platforms - Mobile friendly Water System \u00b6 Optimized realtime refraction and reflection effects. Dynamic waves with 4 different types of ripples: On-Collision Ripples: Created when a rigidbody falls into water Created when a rigidbody gets out of water Created when a rigidbody moves into water Constant Ripples: Created at regular time intervals Script-Generated Ripples: Created in code Waterfall Ripples: Created by a waterfall object that overlaps the water object Overlapping Sine waves Rigidbodies can follow the undulations of water waves Customizable sound and particle effects for each type of ripple (not including the waterfall ripples), with an efficient object pooling system Easily create very large (endless) water area, with great performance Fake perspective effect: Add a sense of depth to your scene by rendering certain objects as partially submerged into water Set a solid or gradient color, a texture or even a texture sheet animation and apply distortion effects, across the water body and/or surface Animate the water size either in code, or using Unity animation system 8 optimized water shaders: 4 shaders for the Builtin (Default) Render Pipeline: 1 unlit, and 3 lit shaders (pixel-lit, vertex-lit and vertex-lit-only-directional-lights) 2 shaders for the Lightweight Render Pipeline: 1 unlit and 1 lit shader (supports the 2D Renderer) 2 shaders for the Universal Render Pipeline: 1 unlit and 1 lit shader (supports the 2D Renderer) Waterfall System \u00b6 Optimized realtime refraction effect Can interact with water systems it overlaps, disturbing their surfaces and creating ripples Set a solid or gradient color, a texture or even a texture sheet animation and apply distortion effects, across the waterfall body, left-right edges and top-bottom edges 8 optimized waterfall shaders: 4 shaders for the Builtin (Default) Render Pipeline: 1 unlit, and 3 lit shaders (pixel-lit, vertex-lit and vertex-lit-only-directional-lights) 2 shaders for the Lightweight Render Pipeline: 1 unlit and 1 lit shader (supports the 2D Renderer) 2 shaders for the Universal Render Pipeline: 1 unlit and 1 lit shader (supports the 2D Renderer) For detailed instructions, please see the Getting Started guides down below. You can check the asset Unity Asset Store page, link Getting Started \u00b6 Water System - Getting Started Guide Waterfall System - Getting Started Guide","title":"About"},{"location":"#game-2d-water-kit-for-unity","text":"","title":"Game 2D Water Kit For Unity"},{"location":"#create-beautiful-and-dynamic-water-and-waterfall-systems","text":"Game 2D Water Kit is a plugin for Unity that allows you to create fast, dynamic, and nice-looking 2D water and waterfalls.","title":"Create beautiful and dynamic water and waterfall systems"},{"location":"#supported-unity-versions","text":"Unity 2017.4 or newer are supported. Note Supports the Builtin (Default) Render Pipeline (Unity 2017.4 or later), the Lightweight Render Pipeline 6.7 or higher, 2D Renderer (Unity 2019.2) and the Universal Render Pipeline, 2D Renderer (Unity 2019.3 or later).","title":"Supported Unity versions"},{"location":"#key-features","text":"Highly customizable water and waterfall systems Seamless integration into the Sprite workflow: Easily sort the water/waterfall object relative to sprites using sorting layers Hide or reveal parts of the water/waterfall object using Sprite Masks and Mesh Masks Quickly tweak and test the water and the waterfall simulation properties in edit-mode Well-integrated into the Unity Editor with clean and well-organized inspectors Top performance across platforms - Mobile friendly","title":"Key Features"},{"location":"#water-system","text":"Optimized realtime refraction and reflection effects. Dynamic waves with 4 different types of ripples: On-Collision Ripples: Created when a rigidbody falls into water Created when a rigidbody gets out of water Created when a rigidbody moves into water Constant Ripples: Created at regular time intervals Script-Generated Ripples: Created in code Waterfall Ripples: Created by a waterfall object that overlaps the water object Overlapping Sine waves Rigidbodies can follow the undulations of water waves Customizable sound and particle effects for each type of ripple (not including the waterfall ripples), with an efficient object pooling system Easily create very large (endless) water area, with great performance Fake perspective effect: Add a sense of depth to your scene by rendering certain objects as partially submerged into water Set a solid or gradient color, a texture or even a texture sheet animation and apply distortion effects, across the water body and/or surface Animate the water size either in code, or using Unity animation system 8 optimized water shaders: 4 shaders for the Builtin (Default) Render Pipeline: 1 unlit, and 3 lit shaders (pixel-lit, vertex-lit and vertex-lit-only-directional-lights) 2 shaders for the Lightweight Render Pipeline: 1 unlit and 1 lit shader (supports the 2D Renderer) 2 shaders for the Universal Render Pipeline: 1 unlit and 1 lit shader (supports the 2D Renderer)","title":"Water System"},{"location":"#waterfall-system","text":"Optimized realtime refraction effect Can interact with water systems it overlaps, disturbing their surfaces and creating ripples Set a solid or gradient color, a texture or even a texture sheet animation and apply distortion effects, across the waterfall body, left-right edges and top-bottom edges 8 optimized waterfall shaders: 4 shaders for the Builtin (Default) Render Pipeline: 1 unlit, and 3 lit shaders (pixel-lit, vertex-lit and vertex-lit-only-directional-lights) 2 shaders for the Lightweight Render Pipeline: 1 unlit and 1 lit shader (supports the 2D Renderer) 2 shaders for the Universal Render Pipeline: 1 unlit and 1 lit shader (supports the 2D Renderer) For detailed instructions, please see the Getting Started guides down below. You can check the asset Unity Asset Store page, link","title":"Waterfall System"},{"location":"#getting-started","text":"Water System - Getting Started Guide Waterfall System - Getting Started Guide","title":"Getting Started"},{"location":"contact/","text":"Get In Touch \u00b6 Got a question, a feature idea, a feedback, or spotted an issue? I'm all ears! ( show email adress ) Please include any screenshot(s)/gif(s) if you think it might help!","title":"Get In Touch"},{"location":"contact/#get-in-touch","text":"Got a question, a feature idea, a feedback, or spotted an issue? I'm all ears! ( show email adress ) Please include any screenshot(s)/gif(s) if you think it might help!","title":"Get In Touch"},{"location":"demo/","text":"Info This online demo is using the Universal Render Pipeline (URP)","title":"Demo"},{"location":"upgrade-render-pipeline/","text":"Upgrading To Universal Render Pipeline (URP) \u00b6 Upgrading the asset to the Universal Render Pipeline (formerly the Lightweight Render Pipeline) is a fairly easy process! We first open the Game2D Water Kit Asset Manager window Window \u2192 Game2D Water Kit Asset Manager And all we need to do next is to press the Configure Asset to use URP button. This will import 2 URP compatible shaders (1 unlit and 1 lit shaders). It's also going to add the GAME_2D_WATER_KIT_URP scripting define symbol and recompile scripts. Also, under the water/waterfall material inspector, we need to make sure we use a shader that is compatible with the Universal Render Pipeline. Important If you upgrade your project from LWRP to URP, you need to reconfigure the asset to use URP by following the exact same steps described above.","title":"Upgrade to URP"},{"location":"upgrade-render-pipeline/#upgrading-to-universal-render-pipeline-urp","text":"Upgrading the asset to the Universal Render Pipeline (formerly the Lightweight Render Pipeline) is a fairly easy process! We first open the Game2D Water Kit Asset Manager window Window \u2192 Game2D Water Kit Asset Manager And all we need to do next is to press the Configure Asset to use URP button. This will import 2 URP compatible shaders (1 unlit and 1 lit shaders). It's also going to add the GAME_2D_WATER_KIT_URP scripting define symbol and recompile scripts. Also, under the water/waterfall material inspector, we need to make sure we use a shader that is compatible with the Universal Render Pipeline. Important If you upgrade your project from LWRP to URP, you need to reconfigure the asset to use URP by following the exact same steps described above.","title":"Upgrading To Universal Render Pipeline (URP)"},{"location":"water-system/","text":"Getting Started With The Water System \u00b6 Creating A Water Object \u00b6 We create a water object from the Hierarchy's Create menu: 2D Object \u2192 Game2D Water Kit \u2192 Water Object Resizing The Water Object \u00b6 We resize the water object right in the scene view using the Rect Tool, or we can just provide the width and the height in the water component inspector. Script Reference 1 2 3 4 5 6 7 8 9 10 // setting the size of water object waterObject . MainModule . SetSize ( new Vector2 ( width , height )); // getting the size of water object Vector2 size = waterObject . MainModule . WaterSize ; float width = waterObject . MainModule . Width ; float height = waterObject . MainModule . Height ; // when the simulation runs, the water height may be different at different points float heightAtSomeXPosition = waterObject . MainModule . GetWaterHeightAtSpcificPoint ( xPositionOfSomePointInWorldSpace ); Sorting The Water Object Relative To Sprites \u00b6 Before trying to sort the water object relative to sprites, we first need to make sure that the Rendering Queue property, under Rendering Options in the water material inspector, is set to Transparent. Note The Rendering Queue property is set to Transparent by default. Then, under the Rendering Properties in the water component inspector, we specify the sorting layer as well as the order within that layer. Script Reference 1 2 waterObject . RenderingModule . SortingLayerID = SortingLayer . NameToID ( \"Default\" ); waterObject . RenderingModule . SortingOrder = 3 ; Changing The Shape Of The Water Object \u00b6 We can hide or reveal parts of the water object to make it take a certain shape either by using Sprite Masks or by enabling the Mesh Mask feature under the Rendering Properties in the water component inspector. Script Reference 1 waterObject . RenderingModule . MeshMask . IsActive = true ; To edit the mask's shape, we first need to enter the Mask Shape Editor by pressing the Edit Mask Shape button. Then, we can tweak the mask's shape using the control points in the scene view. Hold the Ctrl key and press any of the green dots to add a control point at that position. Hold the Alt key and press the control point you want to remove. Under the Rendering Options in the water material inspector, we can set the Mask Interaction property to: Visible Inside Mask Visible Outside Mask If the Lock Position And Size property is toggled on, the mask will no longer update its size and position to match the water object's size and position. Setting Up The Edge Collider 2D \u00b6 If the Use Edge Collider 2D property is toggled on, we can easily edit the edge collider's polyline so it matches the mask's outline. Setting Up The Polygon Collider 2D \u00b6 We can also set up a Polygon Collider 2D to be used instead of the Box Collider 2D to detect collisions. It will also be used by the Buoyancy Effector 2D . Info We will look into the other rendering properties later in the Water Visuals section.","title":"Getting Started"},{"location":"water-system/#getting-started-with-the-water-system","text":"","title":"Getting Started With The Water System"},{"location":"water-system/#creating-a-water-object","text":"We create a water object from the Hierarchy's Create menu: 2D Object \u2192 Game2D Water Kit \u2192 Water Object","title":"Creating A Water Object"},{"location":"water-system/#resizing-the-water-object","text":"We resize the water object right in the scene view using the Rect Tool, or we can just provide the width and the height in the water component inspector. Script Reference 1 2 3 4 5 6 7 8 9 10 // setting the size of water object waterObject . MainModule . SetSize ( new Vector2 ( width , height )); // getting the size of water object Vector2 size = waterObject . MainModule . WaterSize ; float width = waterObject . MainModule . Width ; float height = waterObject . MainModule . Height ; // when the simulation runs, the water height may be different at different points float heightAtSomeXPosition = waterObject . MainModule . GetWaterHeightAtSpcificPoint ( xPositionOfSomePointInWorldSpace );","title":"Resizing The Water Object"},{"location":"water-system/#sorting-the-water-object-relative-to-sprites","text":"Before trying to sort the water object relative to sprites, we first need to make sure that the Rendering Queue property, under Rendering Options in the water material inspector, is set to Transparent. Note The Rendering Queue property is set to Transparent by default. Then, under the Rendering Properties in the water component inspector, we specify the sorting layer as well as the order within that layer. Script Reference 1 2 waterObject . RenderingModule . SortingLayerID = SortingLayer . NameToID ( \"Default\" ); waterObject . RenderingModule . SortingOrder = 3 ;","title":"Sorting The Water Object Relative To Sprites"},{"location":"water-system/#changing-the-shape-of-the-water-object","text":"We can hide or reveal parts of the water object to make it take a certain shape either by using Sprite Masks or by enabling the Mesh Mask feature under the Rendering Properties in the water component inspector. Script Reference 1 waterObject . RenderingModule . MeshMask . IsActive = true ; To edit the mask's shape, we first need to enter the Mask Shape Editor by pressing the Edit Mask Shape button. Then, we can tweak the mask's shape using the control points in the scene view. Hold the Ctrl key and press any of the green dots to add a control point at that position. Hold the Alt key and press the control point you want to remove. Under the Rendering Options in the water material inspector, we can set the Mask Interaction property to: Visible Inside Mask Visible Outside Mask If the Lock Position And Size property is toggled on, the mask will no longer update its size and position to match the water object's size and position.","title":"Changing The Shape Of The Water Object"},{"location":"water-system/#setting-up-the-edge-collider-2d","text":"If the Use Edge Collider 2D property is toggled on, we can easily edit the edge collider's polyline so it matches the mask's outline.","title":"Setting Up The Edge Collider 2D"},{"location":"water-system/#setting-up-the-polygon-collider-2d","text":"We can also set up a Polygon Collider 2D to be used instead of the Box Collider 2D to detect collisions. It will also be used by the Buoyancy Effector 2D . Info We will look into the other rendering properties later in the Water Visuals section.","title":"Setting Up The Polygon Collider 2D"},{"location":"water-system/large-water-area-manager/","text":"Large Water Area Manager \u00b6 Creating Large Water Area Manager \u00b6 We create a large water area manager object from the Hierarchy's Create menu: 2D Object \u2192 Game2D Water Kit \u2192 Large Water Area Manager Object A new large water area manager object is added in the Hierarchy, with a child water object. Large Water Area Manager Component Properties \u00b6 Main Camera \u00b6 The Main Camera property sets the scene main camera that will be used to determine the visibility of each spawned water object. So when a water object is no longer visible to this camera, it gets properly repositioned. Water Object \u00b6 The Water Object property sets the base object from which to instantiate the other water objects. It is assigned by default to the child water object. Important The water object should have a width that is at least half of the Main Camera view frustum width. Note The water object doesn't necessarily have to be a child of the large water area manager object. Water Object Count \u00b6 The Water Object Count property sets the number of water objects to spawn when the game starts. Script Reference 1 2 3 largeWaterAreaManager . MainCamera = mainCamera ; largeWaterAreaManager . WaterObject = waterObject ; largeWaterAreaManager . WaterObjectCount = 3 ; Tip We can get the water object that is located at a specific position using the function GetWaterObjectLocatedAt(float xWorldSpacePosition). This function returns null if there's currently no water object in that position 1 Game2DWater waterObject = largeWaterAreaManager . GetWaterObjectLocatedAt ( 5f );","title":"Large Water Area"},{"location":"water-system/large-water-area-manager/#large-water-area-manager","text":"","title":"Large Water Area Manager"},{"location":"water-system/large-water-area-manager/#creating-large-water-area-manager","text":"We create a large water area manager object from the Hierarchy's Create menu: 2D Object \u2192 Game2D Water Kit \u2192 Large Water Area Manager Object A new large water area manager object is added in the Hierarchy, with a child water object.","title":"Creating Large Water Area Manager"},{"location":"water-system/large-water-area-manager/#large-water-area-manager-component-properties","text":"","title":"Large Water Area Manager Component Properties"},{"location":"water-system/large-water-area-manager/#main-camera","text":"The Main Camera property sets the scene main camera that will be used to determine the visibility of each spawned water object. So when a water object is no longer visible to this camera, it gets properly repositioned.","title":"Main Camera"},{"location":"water-system/large-water-area-manager/#water-object","text":"The Water Object property sets the base object from which to instantiate the other water objects. It is assigned by default to the child water object. Important The water object should have a width that is at least half of the Main Camera view frustum width. Note The water object doesn't necessarily have to be a child of the large water area manager object.","title":"Water Object"},{"location":"water-system/large-water-area-manager/#water-object-count","text":"The Water Object Count property sets the number of water objects to spawn when the game starts. Script Reference 1 2 3 largeWaterAreaManager . MainCamera = mainCamera ; largeWaterAreaManager . WaterObject = waterObject ; largeWaterAreaManager . WaterObjectCount = 3 ; Tip We can get the water object that is located at a specific position using the function GetWaterObjectLocatedAt(float xWorldSpacePosition). This function returns null if there's currently no water object in that position 1 Game2DWater waterObject = largeWaterAreaManager . GetWaterObjectLocatedAt ( 5f );","title":"Water Object Count"},{"location":"water-system/prefab-utility/","text":"Prefab Utility \u00b6 The prefab utility serves to save the water object as a prefab properly, along with its material and its generated noise texture. We only need to choose where we would like to save the prefab, and then hit the Create Prefab button! Info As of version 1.4.3, dragging the water object to the project view to save it as a prefab is also possible.","title":"Prefab Utility"},{"location":"water-system/prefab-utility/#prefab-utility","text":"The prefab utility serves to save the water object as a prefab properly, along with its material and its generated noise texture. We only need to choose where we would like to save the prefab, and then hit the Create Prefab button! Info As of version 1.4.3, dragging the water object to the project view to save it as a prefab is also possible.","title":"Prefab Utility"},{"location":"water-system/water-simulation/","text":"Tweaking The Water Simulation \u00b6 What we'll cover on this page? \u00b6 Buoyancy Effector Waves Can Affect Rigidbodies Dynamic Waves On-Collision Ripples Constant Ripples Script-Generated Ripples Sine Waves All the water simulation properties are tweaked under the Simulation Properties in the water component inspector. Tip We can use the simulation mode to quickly and easily tweak and test the water system simulation properties, in realtime, right in the edit mode without the need to switch to play mode. All we need to do is to press the Enter Simulation Mode button. Buoyancy Effector Properties \u00b6 The Use Buoyancy Effector toggle controls whether or not to use a Buoyancy Effector 2D component. Under the Simulation Properties , the Buoyancy Level property controls the surface location of the buoyancy effector. When rigidbodies are intersecting or below the surface level, buoyancy forces are applied to them. We can set the Buoyancy Level to an arbitrary value between 0 (water's top edge) and 1 (water's bottom edge), or you can match it to one of the following options: Water Top Edge Surface Level: only available when the surface is enabled in the material inspector. Submerge Level: Only available when the fake perspectve effect is enabled in the material inspector. Script Reference 1 2 3 4 5 6 using Game2DWaterKit.AttachedComponents ; ... waterObject . AttachedComponentsModule . BuoyancyEffectorSurfaceLevelLocation = WaterAttachedComponentsModule . BuoyancyEffector2DSurfaceLevelLocation . Custom ; waterObject . AttachedComponentsModule . BuoyancyEffectorSurfaceLevel = 0.02f ; Waves Can Affect Rigidbody \u00b6 We can make rigidbodies, that are floating on water, follow the undulations of water waves by enabling the Waves Can Affect Rigidbodies property. The Strength slider property controls the strength of the force applied to those rigidbodies. Script Reference 1 2 waterObject . SimulationModule . CanWavesAffectRigidbodies = true ; waterObject . SimulationModule . WavesStrengthOnRigidbodies = 0.6f ; Dynamic Waves \u00b6 There are 3 types of dynamic waves: On-Collision Ripples Constant Ripples Script-Generated Ripples Wave Properties \u00b6 The Stiffness property controls the frequency of the wave vibration (how fast the water oscillates). A low value make the water oscillate slowly, while a high value make it oscillate quickly. The Spread property controls how fast the waves propagate. The Damping property controls how fast the water stops oscillating. The lower the damping value is, the longer the water keeps oscillating. Script Reference 1 2 3 waterObject . SimulationModule . Stiffness = 50f ; waterObject . SimulationModule . Spread = 50f ; waterObject . SimulationModule . Damping = 0.05f ; When a wave reaches a boundary, it bounces back. And by default, the simulation boundaries are the left and the right water edges. But, we could define our own boundaries by checking the \"Use Custom Boundaries\" property, and defining the custom boundaries locations. Tip We can visualize the simulation boundaries positions in the scene view by toggling the 'eye icon' on. Script Reference 1 2 3 waterObject . SimulationModule . IsUsingCustomBoundaries = true ; waterObject . SimulationModule . FirstCustomBoundary = 0.5f ; waterObject . SimulationModule . SecondCustomBoundary = - 0.5f ; The Limit maximum disturbance property allows us to limit the maximum disturbance caused by different types of ripples. For instance, when two ripples happen to disturb the same surface vertex, the sum of the disturbance caused by those two ripples are added together and applied to that vertex. When this property is enabled, the resultant disturbance is clamped to the specified maximum disturbance value. So the applied disturbance to the surface vertex is never greater than the specified maximum value. Script Reference 1 2 waterObject . SimulationModule . LimitDynamicWavesDisturbance = true ; waterObject . SimulationModule . MaximumDynamicWavesDisturbance = 1f ; On-Collision Ripples Properties \u00b6 On-Collision Ripples are created when: A rigidbody falls into water. A rigidbody gets out of water. A rigidbody moves in water. Script Reference 1 2 3 waterObject . OnCollisonRipplesModule . IsOnWaterEnterRipplesActive = true ; waterObject . OnCollisonRipplesModule . IsOnWaterExitRipplesActive = true ; waterObject . OnCollisonRipplesModule . IsOnWaterMoveRipplesActive = true ; Collision Properties \u00b6 Collision Filtering \u00b6 Under the Collision Properties , the Collision Mask property controls which objects layers are able to create on-collision ripples. We can also filter the rigidbodies by their depth (z-position), and as such they should have a depth value between the Minimum Depth and the Maximum Depth properties values to be able to create on-collision ripples. Next, the Maximum Distance property controls the maximum distance from the water surface over which to check for collisions. Lastly, the Ignore Triggers property controls whether or not a collider that is marked as \"Is Trigger\" can create on-collision ripples. Script Reference 1 2 3 4 5 waterObject . OnCollisionRipplesModule . CollisionMask = LayerMask . GetMask ( \"Default\" , \"TransparentFX\" ); waterObject . OnCollisionRipplesModule . CollisionMinimumDepth = - 10f ; waterObject . OnCollisionRipplesModule . CollisionMaximumDepth = 10f ; waterObject . OnCollisionRipplesModule . CollisionRaycastMaximumDistance = 0.5f ; waterObject . OnCollisionRipplesModule . CollisionIgnoreTriggers = false ; 2D Box Collider \u00b6 The water object has an attached 2D Box Collider. This collider is configured as a Trigger and has the same size as the water object. By default, the collider's top edge matches the water's top edge, so when a rigidbody crosses the water's top edge, it generates on-collision ripples. We can match the collider's top edge to one of the following options: Water Top Edge Surface Level: Only available when the surface is enabled in the material inspector. Submerge Level: Only available when the fake perspective effect is enabled in the material inspector. On-Water-Enter And On-Water-Exit Ripples Properties \u00b6 On-Water-Enter ripples are created when a rigidbody falls into water. On-Water-Exit ripples are created when a rigidbody gets out of water. Disturbance Properties \u00b6 The Minimum Disturbance and the Maximum Disturbance properties control the minimum and the maximum displacement of the water surface, respectively, when a rigidbody gets into or out of water. The greater the velocity of the rigidbody, the greater the disturbance. The Minimum Velocity property controls the minimum velocity that a rigidbody hitting the water should have to cause the Maximum Disturbance to the water surface. Script Reference 1 2 3 waterObject . OnCollisionRipplesModule . MinimumDisturbance = 0.1f ; waterObject . OnCollisionRipplesModule . MaximumDisturbance = 0.6f ; waterObject . OnCollisionRipplesModule . MinimumVelocityToCauseMaximumDisturbance = 5f ; On-Water-Enter And On-Water-Exit Events \u00b6 The OnWaterEnter event is triggered when a rigidbody falls into water. Script Reference 1 waterObject . OnCollisionRipplesModule . OnWaterEnter . AddListener ( OnWaterEnterCallback ); The OnWaterExit event is triggered when a rigidbody gets out of water. Script Reference 1 waterObject . OnCollisionRipplesModule . OnWaterExit . AddListener ( OnWaterExitCallback ); Info The OnCollisionRipplesModule provides a static event OnWaterEnterExit ( Game2DWater waterObject , Collider2D collider , bool isColliderEnteringWater ) which you can subscribe to in code. Example 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 using UnityEngine ; using Game2DWaterKit ; public class CustomCollisionRipplesGenerator : MonoBehaviour { [Range(0f, 1f)] public float minimumDisturbance = 0.6f ; [Range(0f, 1f)] public float maximumDisturbance = 1.0f ; public bool playSoundEffect = false ; public bool playParticleEffect = false ; public bool smoothRipples = true ; [Range(0f, 1f)] public float smoothingFactor = 0.8f ; private void Start () { Game2DWaterKit . Ripples . WaterCollisionRipplesModule . OnWaterEnterExit . AddListener ( GenerateWaterEnterExitRipples ); } private void GenerateWaterEnterExitRipples ( Game2DWater waterObject , Collider2D collider , bool isColliderEnteringWater ) { Vector2 position = collider . transform . position ; float disturbanceFactor = Random . Range ( minimumDisturbance , maximumDisturbance ); bool pullWaterDown = isColliderEnteringWater ; waterObject . ScriptGeneratedRipplesModule . GenerateRipple ( position , disturbanceFactor , pullWaterDown , playSoundEffect , playParticleEffect , smoothRipples , smoothingFactor ); } } On-Water-Enter And On-Water-Exit Sound Effect \u00b6 It is possible to specify an Audio Clip to play when a rigidbody falls into or gets out of the water. The Pool Size property controls the number of audio sources to pool when the game starts playing. The Can Expand property controls whether or not the number of pooled audio sources can increase at runtime if needed. The Volume property controls the audio clip volume when played. Concerning the audio clip pitch (playback speed), we can use a constant audio pitch by toggling the Constant Pitch property on and setting the constant audio clip pitch value. But, if we would like to vary the audio clip pitch depending on the velocity of the rigidbody hitting the water, we keep the Constant Pitch property toggled off and provide a Minimum Pitch and a Maximum Pitch values instead. And in this case, the greater the rigidbody's velocity, the lower the pitch value. Script Reference 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 // On-Water-Enter Sound Effect waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesSoundEffect . IsActive = true ; waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesSoundEffect . AudioClip = audioClip ; waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesSoundEffect . PoolSize = 10 ; waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesSoundEffect . CanExpandPool = true ; waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesSoundEffect . Volume = 0.1f ; waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesSoundEffect . IsUsingConstantAudioPitch = false ; //waterObject.OnCollisionRipplesModule.OnWaterEnterRipplesSoundEffect.AudioPitch = 1f; waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesSoundEffect . MinimumAudioPitch = 0.85f ; waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesSoundEffect . MaximumAudioPitch = 1.15f ; // On-Water-Exit Sound Effect waterObject . OnCollisionRipplesModule . OnWaterExitRipplesSoundEffect . IsActive = true ; waterObject . OnCollisionRipplesModule . OnWaterExitRipplesSoundEffect . AudioClip = audioClip ; waterObject . OnCollisionRipplesModule . OnWaterExitRipplesSoundEffect . PoolSize = 10 ; waterObject . OnCollisionRipplesModule . OnWaterExitRipplesSoundEffect . CanExpandPool = true ; waterObject . OnCollisionRipplesModule . OnWaterExitRipplesSoundEffect . Volume = 0.1f ; waterObject . OnCollisionRipplesModule . OnWaterExitRipplesSoundEffect . IsUsingConstantAudioPitch = false ; //waterObject.OnCollisionRipplesModule.OnWaterExitRipplesSoundEffect.AudioPitch = 1f; waterObject . OnCollisionRipplesModule . OnWaterExitRipplesSoundEffect . MinimumAudioPitch = 0.85f ; waterObject . OnCollisionRipplesModule . OnWaterExitRipplesSoundEffect . MaximumAudioPitch = 1.15f ; On-Water-Enter And On-Water-Exit Particle Effect \u00b6 It is possible to specify a Particle System to play when a rigidbody falls into or gets out of the water. The Pool Size property controls the number of particle systems to pool when the game starts playing. The Can Expand property controls whether or not the number of pooled particle systems can increase at runtime if needed. The Spawn Offset property controls how much to shift the particle system spawn position. Lastly, the StopAction event is triggered whenever a particle system ends playing. Script Reference 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // On-Water-Enter Particle Effect waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesParticleEffect . IsActive = true ; waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesParticleEffect . ParticleSystem = particleSystem ; waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesParticleEffect . PoolSize = 10 ; waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesParticleEffect . CanExpandPool = true ; waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesParticleEffect . SpawnOffset = new Vector3 ( 0f , - 0.55f , 0.03f ); waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesParticleEffect . StopAction . AddListener ( OnParticleEffectStopAction ); // On-Water-Exit Particle Effect waterObject . OnCollisionRipplesModule . OnWaterExitRipplesParticleEffect . IsActive = true ; waterObject . OnCollisionRipplesModule . OnWaterExitRipplesParticleEffect . ParticleSystem = particleSystem ; waterObject . OnCollisionRipplesModule . OnWaterExitRipplesParticleEffect . PoolSize = 10 ; waterObject . OnCollisionRipplesModule . OnWaterExitRipplesParticleEffect . CanExpandPool = true ; waterObject . OnCollisionRipplesModule . OnWaterExitRipplesParticleEffect . SpawnOffset = new Vector3 ( 0f , - 0.55f , 0.03f ); waterObject . OnCollisionRipplesModule . OnWaterExitRipplesParticleEffect . StopAction . AddListener ( OnParticleEffectStopAction ); On-Water-Move Ripples \u00b6 On-Water-Move ripples are created when a rigidbody, that is floating on water, moves. Disturbance Properties \u00b6 The Maximum Disturbance property controls the maximum displacement of the water surface when a rigidbody moves in water. The greater the horizontal velocity of the rigidbody, the greater the disturbance. The Minimum Velocity property controls the minimum horizontal velocity that a rigidbody should have to cause the Maximum Disturbance to the water surface. The Smoothing Factor property controls how much to disturb neighbor surface vertices in order to create a smoother-looking ripple. Script Reference 1 2 3 waterObject . OnCollisonRipplesModule . OnWaterMoveRipplesMaximumDisturbance = 0.1f ; waterObject . OnCollisonRipplesModule . OnWaterMoveRipplesMinimumVelocityToCauseMaximumDisturbance = 6f ; waterObject . OnCollisonRipplesModule . OnWaterMoveRipplesDisturbanceSmoothFactor = 0.8f ; Constant Ripples \u00b6 Constant Ripples are created at regular time intervals. The Continue creating ripples when off-screen property controls whether or not the water script keeps creating ripples even when the water object is not visible to any camera. Script Reference 1 2 waterObject . ConstantRipplesModule . IsActive = true ; waterObject . ConstantRipplesModule . UpdateWhenOffscreen = false ; Constant Ripples Time Interval \u00b6 We could specify a fixed time interval, or just provide the minimum and the maximum time intervals and let the water script pick a random time interval each time ripples are created. Script Reference 1 2 3 4 waterObject . ConstantRipplesModule . RandomizeTimeInterval = true ; //waterObject.ConstantRipplesModule.TimeInterval = 0.5f; waterObject . ConstantRipplesModule . MinimumTimeInterval = 0.5f ; waterObject . ConstantRipplesModule . MaximumTimeInterval = 1f ; Source Properties \u00b6 A constant ripple originates from the disturbance of a surface vertex, which we will refer to as the ripple source. If the Randomize Source property is toggled on, the water script will randomly pick \"Ripples Source Count\" surface vertices, and disturb them. Script Reference 1 2 waterObject . ConstantRipplesModule . RandomizeRipplesSourcePositions = true ; waterObject . ConstantRipplesModule . RandomRipplesSourceCount = 8 ; But if the Randomize Source property is left toggled off, we select the surface vertices ourselves in the scene-view. Info The green and the red dots in the scene-view represent the water mesh surface vertices. Clicking the green dot adds the surface vertex to the ripples source positions list, and clicking the red dot removes it from the list. The Allow Duplicate Positions property controls whether or not to disturb a surface vertex, that is present in ripples source positions list multiple times, more than once. Script Reference 1 2 3 waterObject . ConstantRipplesModule . RandomizeRipplesSourcePositions = false ; waterObject . ConstantRipplesModule . SourcePositions . Add ( new Vector3 (- 5.35f , 0.87f , 0f )); waterObject . ConstantRipplesModule . AllowDuplicateRipplesSourcePositions = false ; Constant Ripples Disturbance Properties \u00b6 We could specify a fixed disturbance value, or just provide the minimum and the maximum disturbance values and let the water script pick a random disturbance value each time ripples are created. If the Smooth Ripples is toggled on, the ripple source as well as its neighbor surface vertices are disturbed to form a smoother ripple. The Smoothing Factor property controls the amount of disturbance to apply to neighbor vertices, and then how smooth the created ripple looks. Script Reference 1 2 3 4 5 6 waterObject . ConstantRipplesModule . RandomizeDisturbance = true ; //waterObject.ConstantRipplesModule.Disturbance = 0.10f; waterObject . ConstantRipplesModule . MinimumDisturbance = 0.08f ; waterObject . ConstantRipplesModule . MaximumDisturbance = 0.12f ; waterObject . ConstantRipplesModule . SmoothRipples = true ; waterObject . ConstantRipplesModule . SmoothingFactor = 0.125f ; Constant Ripples Sound And Particle Effects \u00b6 As was the case with on-collision ripples, we could activate a sound and a particle effects to play whenever a constant ripple is created. The description of the constant ripples sound and particle effects properties is exactly the same as the on-collision ripples, as discussed here . Script Reference - Sound Effect Properties 1 2 3 4 5 6 7 8 9 waterObject . ConstantRipplesModule . SoundEffect . IsActive = true ; waterObject . ConstantRipplesModule . SoundEffect . AudioClip = audioClip ; waterObject . ConstantRipplesModule . SoundEffect . PoolSize = 10 ; waterObject . ConstantRipplesModule . SoundEffect . CanExpandPool = false ; waterObject . ConstantRipplesModule . SoundEffect . Volume = 1f ; waterObject . ConstantRipplesModule . SoundEffect . IsUsingConstantAudioPitch = false ; //waterObject.ConstantRipplesModule.SoundEffect.AudioPitch = 1f; waterObject . ConstantRipplesModule . SoundEffect . MinimumAudioPitch = 0.75f ; waterObject . ConstantRipplesModule . SoundEffect . MaximumAudioPitch = 1.25f ; Script Reference - Particle Effect Properties 1 2 3 4 5 6 waterObject . ConstantRipplesModule . ParticleEffect . IsActive = true ; waterObject . ConstantRipplesModule . ParticleEffect . ParticleSystem = particleSystem ; waterObject . ConstantRipplesModule . ParticleEffect . PoolSize = 10 ; waterObject . ConstantRipplesModule . ParticleEffect . CanExpandPool = false ; waterObject . ConstantRipplesModule . ParticleEffect . SpawnOffset = Vector3 . zero ; waterObject . ConstantRipplesModule . ParticleEffect . StopAction . AddListener ( OnParticleEffectStopAction ); Script-Generated Ripples \u00b6 Script-Generated ripples are created in code by calling the GenerateRipple() method. Example 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 namespace Game2DWaterKit.DemoTutorial { using UnityEngine ; public class RipplesGenerator : MonoBehavior { private Camera _mainCamera ; public Game2DWater waterObject ; [Range(0f,1f)] public float disturbanceFactor = 0.5f ; public bool pullWaterDown = true ; public bool playSoundEffect = false ; public bool playParticleEffect = false ; public bool smoothRipple = true ; [Range(0f,1f)] public float smoothingFactor = 0.5f ; private void Awake () { _mainCamera = Camera . main ; } private void Update () { if ( Input . GetMouseButtonDown ( 0 ) && waterObject != null ) { Vector2 position = _mainCamera . ScreenToWorldPoint ( Input . mousePosition ); // Create ripple waterObject . ScriptGeneratedRipplesModule . GenerateRipple ( position , disturbanceFactor , pullWaterDown , playSoundEffect , playParticleEffect , smoothRipple , smoothingFactor ); } } } } The GenerateRipple() method takes 7 parameters: Position: [Vector2] controls the position where we would like to create the ripple. The nearest surface vertex to this position is disturbed. Disturbance Factor: [Float, Range: 0..1] controls the amount of disturbance to apply to the water surface. The actual applied disturbance is computed by interpolating the Minimum Disturbance and the Maximum Disturbance by this factor. Info The Minimum Disturbance and the Maximum Disturbance are set in the inspector. We'll see them shortly. PullWaterDown: [Bool] controls whether the water surface is pulled down or pushed up when creating the ripple. This mimics an object falling into water or getting out of water, respectively. PlaySoundEffect: [Bool] controls whether or not to play the sound effect. PlayParticleEffect: [Bool] controls whether or not to play the particle effect. Info The sound and the particle effects properties are set in the inspector. We'll see them shortly. SmoothRipple: [Bool] controls whether or not to disturb neighbor surface vertices in order to create a smoother ripple. Smoothing Factor: [Float, range: 0..1] controls the amount of disturbance to apply to neighbor vertices. Script-Generated Ripples Disturbance Properties \u00b6 We set the Minimum Disturbance and the Maximum Disturbance properties in the inspector. Script Reference 1 2 waterObject . ScriptGeneratedRipplesModule . MinimumDisturbance = 0.1f ; waterObject . ScriptGeneratedRipplesModule . MaximumDisturbance = 0.75f ; Script-Generated Ripples Sound And Particle Effects Properties \u00b6 The description of the script-generated ripples sound and particle effects properties is exactly the same as the on-collision ripples, as discussed here . Script Reference - Sound Effect Properties 1 2 3 4 5 6 7 8 9 waterObject . ScriptGeneratedRipplesModule . SoundEffect . IsActive = true ; waterObject . ScriptGeneratedRipplesModule . SoundEffect . AudioClip = audioClip ; waterObject . ScriptGeneratedRipplesModule . SoundEffect . PoolSize = 10 ; waterObject . ScriptGeneratedRipplesModule . SoundEffect . CanExpandPool = false ; waterObject . ScriptGeneratedRipplesModule . SoundEffect . Volume = 1f ; waterObject . ScriptGeneratedRipplesModule . SoundEffect . IsUsingConstantAudioPitch = false ; //waterObject.ScriptGeneratedRipplesModule.SoundEffect.AudioPitch = 1f; waterObject . ScriptGeneratedRipplesModule . SoundEffect . MinimumAudioPitch = 0.75f ; waterObject . ScriptGeneratedRipplesModule . SoundEffect . MaximumAudioPitch = 1.25f ; Script Reference - Particle Effect Properties 1 2 3 4 5 6 waterObject . ScriptGeneratedRipplesModule . ParticleEffect . IsActive = true ; waterObject . ScriptGeneratedRipplesModule . ParticleEffect . ParticleSystem = particleSystem ; waterObject . ScriptGeneratedRipplesModule . ParticleEffect . PoolSize = 10 ; waterObject . ScriptGeneratedRipplesModule . ParticleEffect . CanExpandPool = false ; waterObject . ScriptGeneratedRipplesModule . ParticleEffect . SpawnOffset = Vector3 . zero ; waterObject . ScriptGeneratedRipplesModule . ParticleEffect . StopAction . AddListener ( OnParticleEffectStopAction ); Sine Waves \u00b6 Besides the dynamic waves, we can also have overlapping sine waves. We can enable Sine Waves under the Simulation Properties in the water component inspector. For each sine wave, we can set its: Amplitude: The height from the water's rest position to the wave crest. Length: The crest-to-crest distance between sine waves in units. Velocity: The distance the crest moves in units per second. Offset: The starting phase of the sine wave.","title":"Water Simulation"},{"location":"water-system/water-simulation/#tweaking-the-water-simulation","text":"","title":"Tweaking The Water Simulation"},{"location":"water-system/water-simulation/#what-well-cover-on-this-page","text":"Buoyancy Effector Waves Can Affect Rigidbodies Dynamic Waves On-Collision Ripples Constant Ripples Script-Generated Ripples Sine Waves All the water simulation properties are tweaked under the Simulation Properties in the water component inspector. Tip We can use the simulation mode to quickly and easily tweak and test the water system simulation properties, in realtime, right in the edit mode without the need to switch to play mode. All we need to do is to press the Enter Simulation Mode button.","title":"What we'll cover on this page?"},{"location":"water-system/water-simulation/#buoyancy-effector-properties","text":"The Use Buoyancy Effector toggle controls whether or not to use a Buoyancy Effector 2D component. Under the Simulation Properties , the Buoyancy Level property controls the surface location of the buoyancy effector. When rigidbodies are intersecting or below the surface level, buoyancy forces are applied to them. We can set the Buoyancy Level to an arbitrary value between 0 (water's top edge) and 1 (water's bottom edge), or you can match it to one of the following options: Water Top Edge Surface Level: only available when the surface is enabled in the material inspector. Submerge Level: Only available when the fake perspectve effect is enabled in the material inspector. Script Reference 1 2 3 4 5 6 using Game2DWaterKit.AttachedComponents ; ... waterObject . AttachedComponentsModule . BuoyancyEffectorSurfaceLevelLocation = WaterAttachedComponentsModule . BuoyancyEffector2DSurfaceLevelLocation . Custom ; waterObject . AttachedComponentsModule . BuoyancyEffectorSurfaceLevel = 0.02f ;","title":"Buoyancy Effector Properties"},{"location":"water-system/water-simulation/#waves-can-affect-rigidbody","text":"We can make rigidbodies, that are floating on water, follow the undulations of water waves by enabling the Waves Can Affect Rigidbodies property. The Strength slider property controls the strength of the force applied to those rigidbodies. Script Reference 1 2 waterObject . SimulationModule . CanWavesAffectRigidbodies = true ; waterObject . SimulationModule . WavesStrengthOnRigidbodies = 0.6f ;","title":"Waves Can Affect Rigidbody"},{"location":"water-system/water-simulation/#dynamic-waves","text":"There are 3 types of dynamic waves: On-Collision Ripples Constant Ripples Script-Generated Ripples","title":"Dynamic Waves"},{"location":"water-system/water-simulation/#wave-properties","text":"The Stiffness property controls the frequency of the wave vibration (how fast the water oscillates). A low value make the water oscillate slowly, while a high value make it oscillate quickly. The Spread property controls how fast the waves propagate. The Damping property controls how fast the water stops oscillating. The lower the damping value is, the longer the water keeps oscillating. Script Reference 1 2 3 waterObject . SimulationModule . Stiffness = 50f ; waterObject . SimulationModule . Spread = 50f ; waterObject . SimulationModule . Damping = 0.05f ; When a wave reaches a boundary, it bounces back. And by default, the simulation boundaries are the left and the right water edges. But, we could define our own boundaries by checking the \"Use Custom Boundaries\" property, and defining the custom boundaries locations. Tip We can visualize the simulation boundaries positions in the scene view by toggling the 'eye icon' on. Script Reference 1 2 3 waterObject . SimulationModule . IsUsingCustomBoundaries = true ; waterObject . SimulationModule . FirstCustomBoundary = 0.5f ; waterObject . SimulationModule . SecondCustomBoundary = - 0.5f ; The Limit maximum disturbance property allows us to limit the maximum disturbance caused by different types of ripples. For instance, when two ripples happen to disturb the same surface vertex, the sum of the disturbance caused by those two ripples are added together and applied to that vertex. When this property is enabled, the resultant disturbance is clamped to the specified maximum disturbance value. So the applied disturbance to the surface vertex is never greater than the specified maximum value. Script Reference 1 2 waterObject . SimulationModule . LimitDynamicWavesDisturbance = true ; waterObject . SimulationModule . MaximumDynamicWavesDisturbance = 1f ;","title":"Wave Properties"},{"location":"water-system/water-simulation/#on-collision-ripples-properties","text":"On-Collision Ripples are created when: A rigidbody falls into water. A rigidbody gets out of water. A rigidbody moves in water. Script Reference 1 2 3 waterObject . OnCollisonRipplesModule . IsOnWaterEnterRipplesActive = true ; waterObject . OnCollisonRipplesModule . IsOnWaterExitRipplesActive = true ; waterObject . OnCollisonRipplesModule . IsOnWaterMoveRipplesActive = true ;","title":"On-Collision Ripples Properties"},{"location":"water-system/water-simulation/#collision-properties","text":"","title":"Collision Properties"},{"location":"water-system/water-simulation/#collision-filtering","text":"Under the Collision Properties , the Collision Mask property controls which objects layers are able to create on-collision ripples. We can also filter the rigidbodies by their depth (z-position), and as such they should have a depth value between the Minimum Depth and the Maximum Depth properties values to be able to create on-collision ripples. Next, the Maximum Distance property controls the maximum distance from the water surface over which to check for collisions. Lastly, the Ignore Triggers property controls whether or not a collider that is marked as \"Is Trigger\" can create on-collision ripples. Script Reference 1 2 3 4 5 waterObject . OnCollisionRipplesModule . CollisionMask = LayerMask . GetMask ( \"Default\" , \"TransparentFX\" ); waterObject . OnCollisionRipplesModule . CollisionMinimumDepth = - 10f ; waterObject . OnCollisionRipplesModule . CollisionMaximumDepth = 10f ; waterObject . OnCollisionRipplesModule . CollisionRaycastMaximumDistance = 0.5f ; waterObject . OnCollisionRipplesModule . CollisionIgnoreTriggers = false ;","title":"Collision Filtering"},{"location":"water-system/water-simulation/#2d-box-collider","text":"The water object has an attached 2D Box Collider. This collider is configured as a Trigger and has the same size as the water object. By default, the collider's top edge matches the water's top edge, so when a rigidbody crosses the water's top edge, it generates on-collision ripples. We can match the collider's top edge to one of the following options: Water Top Edge Surface Level: Only available when the surface is enabled in the material inspector. Submerge Level: Only available when the fake perspective effect is enabled in the material inspector.","title":"2D Box Collider"},{"location":"water-system/water-simulation/#on-water-enter-and-on-water-exit-ripples-properties","text":"On-Water-Enter ripples are created when a rigidbody falls into water. On-Water-Exit ripples are created when a rigidbody gets out of water.","title":"On-Water-Enter And On-Water-Exit Ripples Properties"},{"location":"water-system/water-simulation/#disturbance-properties","text":"The Minimum Disturbance and the Maximum Disturbance properties control the minimum and the maximum displacement of the water surface, respectively, when a rigidbody gets into or out of water. The greater the velocity of the rigidbody, the greater the disturbance. The Minimum Velocity property controls the minimum velocity that a rigidbody hitting the water should have to cause the Maximum Disturbance to the water surface. Script Reference 1 2 3 waterObject . OnCollisionRipplesModule . MinimumDisturbance = 0.1f ; waterObject . OnCollisionRipplesModule . MaximumDisturbance = 0.6f ; waterObject . OnCollisionRipplesModule . MinimumVelocityToCauseMaximumDisturbance = 5f ;","title":"Disturbance Properties"},{"location":"water-system/water-simulation/#on-water-enter-and-on-water-exit-events","text":"The OnWaterEnter event is triggered when a rigidbody falls into water. Script Reference 1 waterObject . OnCollisionRipplesModule . OnWaterEnter . AddListener ( OnWaterEnterCallback ); The OnWaterExit event is triggered when a rigidbody gets out of water. Script Reference 1 waterObject . OnCollisionRipplesModule . OnWaterExit . AddListener ( OnWaterExitCallback ); Info The OnCollisionRipplesModule provides a static event OnWaterEnterExit ( Game2DWater waterObject , Collider2D collider , bool isColliderEnteringWater ) which you can subscribe to in code. Example 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 using UnityEngine ; using Game2DWaterKit ; public class CustomCollisionRipplesGenerator : MonoBehaviour { [Range(0f, 1f)] public float minimumDisturbance = 0.6f ; [Range(0f, 1f)] public float maximumDisturbance = 1.0f ; public bool playSoundEffect = false ; public bool playParticleEffect = false ; public bool smoothRipples = true ; [Range(0f, 1f)] public float smoothingFactor = 0.8f ; private void Start () { Game2DWaterKit . Ripples . WaterCollisionRipplesModule . OnWaterEnterExit . AddListener ( GenerateWaterEnterExitRipples ); } private void GenerateWaterEnterExitRipples ( Game2DWater waterObject , Collider2D collider , bool isColliderEnteringWater ) { Vector2 position = collider . transform . position ; float disturbanceFactor = Random . Range ( minimumDisturbance , maximumDisturbance ); bool pullWaterDown = isColliderEnteringWater ; waterObject . ScriptGeneratedRipplesModule . GenerateRipple ( position , disturbanceFactor , pullWaterDown , playSoundEffect , playParticleEffect , smoothRipples , smoothingFactor ); } }","title":"On-Water-Enter And On-Water-Exit Events"},{"location":"water-system/water-simulation/#on-water-enter-and-on-water-exit-sound-effect","text":"It is possible to specify an Audio Clip to play when a rigidbody falls into or gets out of the water. The Pool Size property controls the number of audio sources to pool when the game starts playing. The Can Expand property controls whether or not the number of pooled audio sources can increase at runtime if needed. The Volume property controls the audio clip volume when played. Concerning the audio clip pitch (playback speed), we can use a constant audio pitch by toggling the Constant Pitch property on and setting the constant audio clip pitch value. But, if we would like to vary the audio clip pitch depending on the velocity of the rigidbody hitting the water, we keep the Constant Pitch property toggled off and provide a Minimum Pitch and a Maximum Pitch values instead. And in this case, the greater the rigidbody's velocity, the lower the pitch value. Script Reference 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 // On-Water-Enter Sound Effect waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesSoundEffect . IsActive = true ; waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesSoundEffect . AudioClip = audioClip ; waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesSoundEffect . PoolSize = 10 ; waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesSoundEffect . CanExpandPool = true ; waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesSoundEffect . Volume = 0.1f ; waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesSoundEffect . IsUsingConstantAudioPitch = false ; //waterObject.OnCollisionRipplesModule.OnWaterEnterRipplesSoundEffect.AudioPitch = 1f; waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesSoundEffect . MinimumAudioPitch = 0.85f ; waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesSoundEffect . MaximumAudioPitch = 1.15f ; // On-Water-Exit Sound Effect waterObject . OnCollisionRipplesModule . OnWaterExitRipplesSoundEffect . IsActive = true ; waterObject . OnCollisionRipplesModule . OnWaterExitRipplesSoundEffect . AudioClip = audioClip ; waterObject . OnCollisionRipplesModule . OnWaterExitRipplesSoundEffect . PoolSize = 10 ; waterObject . OnCollisionRipplesModule . OnWaterExitRipplesSoundEffect . CanExpandPool = true ; waterObject . OnCollisionRipplesModule . OnWaterExitRipplesSoundEffect . Volume = 0.1f ; waterObject . OnCollisionRipplesModule . OnWaterExitRipplesSoundEffect . IsUsingConstantAudioPitch = false ; //waterObject.OnCollisionRipplesModule.OnWaterExitRipplesSoundEffect.AudioPitch = 1f; waterObject . OnCollisionRipplesModule . OnWaterExitRipplesSoundEffect . MinimumAudioPitch = 0.85f ; waterObject . OnCollisionRipplesModule . OnWaterExitRipplesSoundEffect . MaximumAudioPitch = 1.15f ;","title":"On-Water-Enter And On-Water-Exit Sound Effect"},{"location":"water-system/water-simulation/#on-water-enter-and-on-water-exit-particle-effect","text":"It is possible to specify a Particle System to play when a rigidbody falls into or gets out of the water. The Pool Size property controls the number of particle systems to pool when the game starts playing. The Can Expand property controls whether or not the number of pooled particle systems can increase at runtime if needed. The Spawn Offset property controls how much to shift the particle system spawn position. Lastly, the StopAction event is triggered whenever a particle system ends playing. Script Reference 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // On-Water-Enter Particle Effect waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesParticleEffect . IsActive = true ; waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesParticleEffect . ParticleSystem = particleSystem ; waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesParticleEffect . PoolSize = 10 ; waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesParticleEffect . CanExpandPool = true ; waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesParticleEffect . SpawnOffset = new Vector3 ( 0f , - 0.55f , 0.03f ); waterObject . OnCollisionRipplesModule . OnWaterEnterRipplesParticleEffect . StopAction . AddListener ( OnParticleEffectStopAction ); // On-Water-Exit Particle Effect waterObject . OnCollisionRipplesModule . OnWaterExitRipplesParticleEffect . IsActive = true ; waterObject . OnCollisionRipplesModule . OnWaterExitRipplesParticleEffect . ParticleSystem = particleSystem ; waterObject . OnCollisionRipplesModule . OnWaterExitRipplesParticleEffect . PoolSize = 10 ; waterObject . OnCollisionRipplesModule . OnWaterExitRipplesParticleEffect . CanExpandPool = true ; waterObject . OnCollisionRipplesModule . OnWaterExitRipplesParticleEffect . SpawnOffset = new Vector3 ( 0f , - 0.55f , 0.03f ); waterObject . OnCollisionRipplesModule . OnWaterExitRipplesParticleEffect . StopAction . AddListener ( OnParticleEffectStopAction );","title":"On-Water-Enter And On-Water-Exit Particle Effect"},{"location":"water-system/water-simulation/#on-water-move-ripples","text":"On-Water-Move ripples are created when a rigidbody, that is floating on water, moves.","title":"On-Water-Move Ripples"},{"location":"water-system/water-simulation/#disturbance-properties_1","text":"The Maximum Disturbance property controls the maximum displacement of the water surface when a rigidbody moves in water. The greater the horizontal velocity of the rigidbody, the greater the disturbance. The Minimum Velocity property controls the minimum horizontal velocity that a rigidbody should have to cause the Maximum Disturbance to the water surface. The Smoothing Factor property controls how much to disturb neighbor surface vertices in order to create a smoother-looking ripple. Script Reference 1 2 3 waterObject . OnCollisonRipplesModule . OnWaterMoveRipplesMaximumDisturbance = 0.1f ; waterObject . OnCollisonRipplesModule . OnWaterMoveRipplesMinimumVelocityToCauseMaximumDisturbance = 6f ; waterObject . OnCollisonRipplesModule . OnWaterMoveRipplesDisturbanceSmoothFactor = 0.8f ;","title":"Disturbance Properties"},{"location":"water-system/water-simulation/#constant-ripples","text":"Constant Ripples are created at regular time intervals. The Continue creating ripples when off-screen property controls whether or not the water script keeps creating ripples even when the water object is not visible to any camera. Script Reference 1 2 waterObject . ConstantRipplesModule . IsActive = true ; waterObject . ConstantRipplesModule . UpdateWhenOffscreen = false ;","title":"Constant Ripples"},{"location":"water-system/water-simulation/#constant-ripples-time-interval","text":"We could specify a fixed time interval, or just provide the minimum and the maximum time intervals and let the water script pick a random time interval each time ripples are created. Script Reference 1 2 3 4 waterObject . ConstantRipplesModule . RandomizeTimeInterval = true ; //waterObject.ConstantRipplesModule.TimeInterval = 0.5f; waterObject . ConstantRipplesModule . MinimumTimeInterval = 0.5f ; waterObject . ConstantRipplesModule . MaximumTimeInterval = 1f ;","title":"Constant Ripples Time Interval"},{"location":"water-system/water-simulation/#source-properties","text":"A constant ripple originates from the disturbance of a surface vertex, which we will refer to as the ripple source. If the Randomize Source property is toggled on, the water script will randomly pick \"Ripples Source Count\" surface vertices, and disturb them. Script Reference 1 2 waterObject . ConstantRipplesModule . RandomizeRipplesSourcePositions = true ; waterObject . ConstantRipplesModule . RandomRipplesSourceCount = 8 ; But if the Randomize Source property is left toggled off, we select the surface vertices ourselves in the scene-view. Info The green and the red dots in the scene-view represent the water mesh surface vertices. Clicking the green dot adds the surface vertex to the ripples source positions list, and clicking the red dot removes it from the list. The Allow Duplicate Positions property controls whether or not to disturb a surface vertex, that is present in ripples source positions list multiple times, more than once. Script Reference 1 2 3 waterObject . ConstantRipplesModule . RandomizeRipplesSourcePositions = false ; waterObject . ConstantRipplesModule . SourcePositions . Add ( new Vector3 (- 5.35f , 0.87f , 0f )); waterObject . ConstantRipplesModule . AllowDuplicateRipplesSourcePositions = false ;","title":"Source Properties"},{"location":"water-system/water-simulation/#constant-ripples-disturbance-properties","text":"We could specify a fixed disturbance value, or just provide the minimum and the maximum disturbance values and let the water script pick a random disturbance value each time ripples are created. If the Smooth Ripples is toggled on, the ripple source as well as its neighbor surface vertices are disturbed to form a smoother ripple. The Smoothing Factor property controls the amount of disturbance to apply to neighbor vertices, and then how smooth the created ripple looks. Script Reference 1 2 3 4 5 6 waterObject . ConstantRipplesModule . RandomizeDisturbance = true ; //waterObject.ConstantRipplesModule.Disturbance = 0.10f; waterObject . ConstantRipplesModule . MinimumDisturbance = 0.08f ; waterObject . ConstantRipplesModule . MaximumDisturbance = 0.12f ; waterObject . ConstantRipplesModule . SmoothRipples = true ; waterObject . ConstantRipplesModule . SmoothingFactor = 0.125f ;","title":"Constant Ripples Disturbance Properties"},{"location":"water-system/water-simulation/#constant-ripples-sound-and-particle-effects","text":"As was the case with on-collision ripples, we could activate a sound and a particle effects to play whenever a constant ripple is created. The description of the constant ripples sound and particle effects properties is exactly the same as the on-collision ripples, as discussed here . Script Reference - Sound Effect Properties 1 2 3 4 5 6 7 8 9 waterObject . ConstantRipplesModule . SoundEffect . IsActive = true ; waterObject . ConstantRipplesModule . SoundEffect . AudioClip = audioClip ; waterObject . ConstantRipplesModule . SoundEffect . PoolSize = 10 ; waterObject . ConstantRipplesModule . SoundEffect . CanExpandPool = false ; waterObject . ConstantRipplesModule . SoundEffect . Volume = 1f ; waterObject . ConstantRipplesModule . SoundEffect . IsUsingConstantAudioPitch = false ; //waterObject.ConstantRipplesModule.SoundEffect.AudioPitch = 1f; waterObject . ConstantRipplesModule . SoundEffect . MinimumAudioPitch = 0.75f ; waterObject . ConstantRipplesModule . SoundEffect . MaximumAudioPitch = 1.25f ; Script Reference - Particle Effect Properties 1 2 3 4 5 6 waterObject . ConstantRipplesModule . ParticleEffect . IsActive = true ; waterObject . ConstantRipplesModule . ParticleEffect . ParticleSystem = particleSystem ; waterObject . ConstantRipplesModule . ParticleEffect . PoolSize = 10 ; waterObject . ConstantRipplesModule . ParticleEffect . CanExpandPool = false ; waterObject . ConstantRipplesModule . ParticleEffect . SpawnOffset = Vector3 . zero ; waterObject . ConstantRipplesModule . ParticleEffect . StopAction . AddListener ( OnParticleEffectStopAction );","title":"Constant Ripples Sound And Particle Effects"},{"location":"water-system/water-simulation/#script-generated-ripples","text":"Script-Generated ripples are created in code by calling the GenerateRipple() method. Example 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 namespace Game2DWaterKit.DemoTutorial { using UnityEngine ; public class RipplesGenerator : MonoBehavior { private Camera _mainCamera ; public Game2DWater waterObject ; [Range(0f,1f)] public float disturbanceFactor = 0.5f ; public bool pullWaterDown = true ; public bool playSoundEffect = false ; public bool playParticleEffect = false ; public bool smoothRipple = true ; [Range(0f,1f)] public float smoothingFactor = 0.5f ; private void Awake () { _mainCamera = Camera . main ; } private void Update () { if ( Input . GetMouseButtonDown ( 0 ) && waterObject != null ) { Vector2 position = _mainCamera . ScreenToWorldPoint ( Input . mousePosition ); // Create ripple waterObject . ScriptGeneratedRipplesModule . GenerateRipple ( position , disturbanceFactor , pullWaterDown , playSoundEffect , playParticleEffect , smoothRipple , smoothingFactor ); } } } } The GenerateRipple() method takes 7 parameters: Position: [Vector2] controls the position where we would like to create the ripple. The nearest surface vertex to this position is disturbed. Disturbance Factor: [Float, Range: 0..1] controls the amount of disturbance to apply to the water surface. The actual applied disturbance is computed by interpolating the Minimum Disturbance and the Maximum Disturbance by this factor. Info The Minimum Disturbance and the Maximum Disturbance are set in the inspector. We'll see them shortly. PullWaterDown: [Bool] controls whether the water surface is pulled down or pushed up when creating the ripple. This mimics an object falling into water or getting out of water, respectively. PlaySoundEffect: [Bool] controls whether or not to play the sound effect. PlayParticleEffect: [Bool] controls whether or not to play the particle effect. Info The sound and the particle effects properties are set in the inspector. We'll see them shortly. SmoothRipple: [Bool] controls whether or not to disturb neighbor surface vertices in order to create a smoother ripple. Smoothing Factor: [Float, range: 0..1] controls the amount of disturbance to apply to neighbor vertices.","title":"Script-Generated Ripples"},{"location":"water-system/water-simulation/#script-generated-ripples-disturbance-properties","text":"We set the Minimum Disturbance and the Maximum Disturbance properties in the inspector. Script Reference 1 2 waterObject . ScriptGeneratedRipplesModule . MinimumDisturbance = 0.1f ; waterObject . ScriptGeneratedRipplesModule . MaximumDisturbance = 0.75f ;","title":"Script-Generated Ripples Disturbance Properties"},{"location":"water-system/water-simulation/#script-generated-ripples-sound-and-particle-effects-properties","text":"The description of the script-generated ripples sound and particle effects properties is exactly the same as the on-collision ripples, as discussed here . Script Reference - Sound Effect Properties 1 2 3 4 5 6 7 8 9 waterObject . ScriptGeneratedRipplesModule . SoundEffect . IsActive = true ; waterObject . ScriptGeneratedRipplesModule . SoundEffect . AudioClip = audioClip ; waterObject . ScriptGeneratedRipplesModule . SoundEffect . PoolSize = 10 ; waterObject . ScriptGeneratedRipplesModule . SoundEffect . CanExpandPool = false ; waterObject . ScriptGeneratedRipplesModule . SoundEffect . Volume = 1f ; waterObject . ScriptGeneratedRipplesModule . SoundEffect . IsUsingConstantAudioPitch = false ; //waterObject.ScriptGeneratedRipplesModule.SoundEffect.AudioPitch = 1f; waterObject . ScriptGeneratedRipplesModule . SoundEffect . MinimumAudioPitch = 0.75f ; waterObject . ScriptGeneratedRipplesModule . SoundEffect . MaximumAudioPitch = 1.25f ; Script Reference - Particle Effect Properties 1 2 3 4 5 6 waterObject . ScriptGeneratedRipplesModule . ParticleEffect . IsActive = true ; waterObject . ScriptGeneratedRipplesModule . ParticleEffect . ParticleSystem = particleSystem ; waterObject . ScriptGeneratedRipplesModule . ParticleEffect . PoolSize = 10 ; waterObject . ScriptGeneratedRipplesModule . ParticleEffect . CanExpandPool = false ; waterObject . ScriptGeneratedRipplesModule . ParticleEffect . SpawnOffset = Vector3 . zero ; waterObject . ScriptGeneratedRipplesModule . ParticleEffect . StopAction . AddListener ( OnParticleEffectStopAction );","title":"Script-Generated Ripples Sound And Particle Effects Properties"},{"location":"water-system/water-simulation/#sine-waves","text":"Besides the dynamic waves, we can also have overlapping sine waves. We can enable Sine Waves under the Simulation Properties in the water component inspector. For each sine wave, we can set its: Amplitude: The height from the water's rest position to the wave crest. Length: The crest-to-crest distance between sine waves in units. Velocity: The distance the crest moves in units per second. Offset: The starting phase of the sine wave.","title":"Sine Waves"},{"location":"water-system/water-size-animation/","text":"It's possible to animate the water size in code using the method AnimateWaterSize(targetSize, duration, constraint, wrapMode). targetSize: [Vector2] sets the water target size. duration: [float] sets the animation duration in seconds. constraint: [enum WaterAnimationConstraint] constraints the position of one/multiple water edge(s) WaterAnimationConstraint enum None, Top, Bottom, Left, Right, TopLeft, TopRight, BottomLeft, BottomRight wrapMode: [enum WaterAnimationWrapMode] WaterAnimationWrapMode enum Once: Stops playing the animation once the target size is reached. Loop: The water size is reset to the initial size and the animation is restarted once the target size is reached. PingPong: When the target size is reached, the initial size is set to the new target size and the animation restarts. So the water size will ping-pong back and forth between the initial size and the target size. Example 1 2 3 4 5 6 7 8 9 10 using Game2DWaterKit.Animation ; .... var targetSize = waterObject . MainModule . WaterSize + new Vector2 ( 0f , 3f ); // increase the water height by 3 units var duration = 2f ; // 2 seconds var constraint = WaterAnimationConstraint . Bottom ; // constraints the position of the bottom edges, so only the top edge \"moves\" var wrapMode = WaterAnimationWrapMode . Once ; // play the animation once waterObject . AnimationModule . AnimateWaterSize ( targetSize , duration , constraint , wrapMode );","title":"Water Size Animation"},{"location":"water-system/water-visuals/","text":"Tweaking The Water Visuals \u00b6 What we'll cover on this page? \u00b6 Water Body Properties Water Surface Properties Water Refraction Properties Water Reflection Properties Water Fake Perspective Effect Properties Water Emission Effect Properties Water Rendering Properties Properties Water Body \u00b6 Body Color \u00b6 We can set the water body color to either a Solid Color or a Gradient Color . If we choose to use a Gradient Color , the Gradient Offset property controls how much to shift the gradient-line midpoint position (where the middle of the color transition should be). Info The Gradient Offset property range: -0.5 \u2192 0.5 Body Texture \u00b6 We can apply a texture across the water body. Warning The texture should have its wrap-mode set to Repeat or Mirror in the texture import settings. Body Texture Sheet Properties \u00b6 This texture could be a regular texture, or a texture-sheet (a texture consisting of many frames) by toggling the Is A Texture Sheet property on, and then specifying the number of columns and rows and also setting how many frames to play per second. Body Texture Opacity \u00b6 The Opacity property controls the visibility of the texture. Body Texture Scrolling Speed \u00b6 We can make the texture scroll, in the X and/or the Y directions, by tweaking the Scrolling Speed property. Body Texture Tiling Mode \u00b6 Regarding the texture tiling properties, there are two tiling modes: Stretch: The texture stretches when the water object size changes, always keeping the same number of tiles we specify for the X and Y directions. Repeat: The texture repeats when the water object size changes. In this mode, we specify the scale in units of a single tile. Body Texture Offset \u00b6 We can provide a texture offset regardless of the selected texture Tiling Mode . Body Texture Distortion Effect \u00b6 Distortion Scale - Offset \u00b6 The Mathf.PerlinNoise(x,y) function is used to sample the Perlin noise texture values. The Scale and Offset properties controls the sampled area size and origin, respectively. Warning The Scale And Offset properties are used to generate the noise texture (which actually happens only in the editor), and as such they are not animatable. Distortion Strength \u00b6 The Strength property, as the name suggests, controls how strong the distortion effect is. Distortion Speed \u00b6 The Speed property controls the noise texture scrolling speed. Distortion Tiling \u00b6 The Tiling property controls the scale of a noise texture tile relative to a water body texture tile. Example A value of 0.5 , for both the X and Y axis, will apply the noise texture across 4 water body texture tiles. Tip We can use the Tiling property to lower the distortion strength across one axis, and keep the full strength across the other. Water Surface \u00b6 Surface Thickness \u00b6 The Thickness property sets the thickness of the surface line. The thickness can be either Absolute or Relative to the water height. Script Reference 1 2 3 4 waterObject . MaterialModule . HasAbsoluteSurfaceThickness = true ; waterObject . MaterialModule . SurfaceThickness = 0.1f ; // or match the surface level to a world space position waterObject . MaterialModule . SurfaceThickness = waterObject . MaterialModule . TransformPointWorldSpaceToSurfaceThickness ( worldPoint ); Note We will look into the Submerge Level property later when we go through the water fake perspective effect properties, here . Surface Color and Texture \u00b6 Just like the water body, we can tweak the surface tint color and apply a texture across the surface. The description of the surface color and texture properties is exactly the same as the water body texture properties, as discussed here . Water Refraction \u00b6 Script Reference 1 waterObject . MaterialModule . IsRefractionEnabled = true ; Refraction Bending \u00b6 The bending property controls how much we would like to shift the submerged portion of an object relative to the other portion above the water. Example Refraction Distortion Effect \u00b6 The refraction distortion properties description is the same as the water body distortion effect properties, discussed here . Refraction Layers \u00b6 We select which layers to include in the refraction rendering using the Objects To Render property under the Refraction Properties in the water component inspector. Script Reference 1 waterObject . RenderingModule . Refraction . CullingMask = LayerMask . GetMask ( \"Default\" ); Refraction Render-Texture Properties \u00b6 If the Use Fixed Size property is toggled on, the Size property sets the refraction render-texture width and height. Script Reference 1 2 waterObject . RenderingModule . Refraction . RenderTextureUseFixedSize = true ; waterObject . RenderingModule . Refraction . RenderTextureFixedSize = 512 ; But, if the Use Fixed Size property is toggled off, the refraction render-texture will have a dynamic size, and the render-texture width and height are in this case equal to the the water object visible area on screen width and height. We can even downscale this computed size by lowering the Resizing Factor property value. Script Reference 1 2 waterObject . RenderingModule . Refraction . RenderTextureUseFixedSize = false ; waterObject . RenderingModule . Refraction . RenderTextureResizingFactor = 0.75f ; Lastly, We can set the refraction render-texture Filter Mode property to either Bilinear or Point . Script Reference 1 waterObject . RenderingModule . Refraction . RenderTextureFilterMode = FilterMode . Bilinear ; Water Reflection \u00b6 Script Reference 1 waterObject . MaterialModule . IsReflectionEnabled = true ; Reflection Visibility \u00b6 We control the visibility of the rendered reflection image under the Reflection Properties in the water material inspector. Reflection Fade \u00b6 We can make the reflection fade vertically along the water object, starting from the top at full opacity. To do this, we toggle the Fade property on, and proceed to select the desired fade speed : Linear Exponential - Two Exponential - Three Exponential - Four Reflection Distortion Effect \u00b6 The reflection distortion properties description is the same as the water body distortion effect properties, as discussed here . Reflection Layers \u00b6 We use select which layers to include in the reflection rendering using the Objects To Render property under the Reflection Properties in the water component inspector. Script Reference 1 waterObject . RenderingModule . Reflection . CullingMask = LayerMask . GetMask ( \"Default\" , \"TransparentFX\" ); Reflection Render-Texture Properties \u00b6 If the Use Fixed Size property is toggled on, the Size property sets the reflection render-texture width and height. Script Reference 1 2 waterObject . RenderingModule . Reflection . RenderTextureUseFixedSize = true ; waterObject . RenderingModule . Reflection . RenderTextureFixedSize = 512 ; Otherwise, the refraction render-texture will have a dynamic size, and the render-texture width and height are equal to the the water object visible area on screen width and height. We can even downscale this computed size by lowering the Resizing Factor property value. Script Reference 1 2 waterObject . RenderingModule . Reflection . RenderTextureUseFixedSize = false ; waterObject . RenderingModule . Reflection . RenderTextureResizingFactor = 0.75f ; Lastly, We can set the reflection render-texture Filter Mode property to either Bilinear or Point . Script Reference 1 waterObject . RenderingModule . Reflection . RenderTextureFilterMode = FilterMode . Bilinear ; Reflection Frustum Properties \u00b6 Frustum Z-Offset \u00b6 The Z-Offset property controls where to start rendering the water reflection relative to the water object position. This might be useful if we would like to render the reflection of certain objects that are in front of the water object. Script Reference 1 waterObject . RenderingModule . ReflectionZOffset = 0f ; Frustum Height Scaling Factor \u00b6 The reflection frustum size is equal to the visible water area size. We can expand this frustum vertically by setting the Height Scaling Factor property. Tip We can visualize the reflection frustum bounds in the scene-view by toggling the 'eye icon' on. Script Reference 1 waterObject . RenderingModule . Reflection . ViewingFrustumHeightScalingFactor = 2f ; Water Fake Perspective Effect \u00b6 The fake perspective effect consists of rendering certain objects that intersect the submerge level as partially submerged into water, adding a sense of depth to the water. We can enable this effect under the Surface Properties in the water material inspector by toggling the Submerge Level property on and adjusting the submerge level position. Script Reference 1 2 3 4 5 waterObject . MaterialModule . IsFakePerspectiveEnabled = true ; waterObject . MaterialModule . SubmergeLevel = 0.75f ; // or match the submerge level to a world space position waterObject . MaterialModule . SubmergeLevel = waterObject . MaterialModule . TransformPointWorldSpaceToSubmergeLevel ( worldPoint ); Fake Perspective Effect Layers \u00b6 Fake Perspective Effect - Refraction Layers \u00b6 Under the Refraction Properties in the water component inspector, we set the Partially submerged Objects property to select which objects layers to render as partially submerged into water when they intersect the submerge level. Script Reference 1 waterObject . RenderingModule . RefractionPartiallySubmergedObjects . CullingMask = LayerMask . GetMask ( \"Default\" , \"TransparentFX\" ); Fake Perspective Effect - Reflection Layers \u00b6 If we would like to render the reflection of certain partially submerged objects, we make sure to select their layers under the Reflection Properties in the water component inspector. Script Reference 1 waterObject . RenderingModule . ReflectionPartiallySubmergedObjects . CullingMask = 0 ; Fake Perspective Effect - Reflection View Frustum Properties \u00b6 We can expand the partially submerged objects reflection frustum as well as the other objects reflection frustum vertically by settings their respective scaling factors properties. Tip We can visualize the reflection frustums bounds in the scene-view by toggling the 'eye icon' on. Script Reference 1 waterObject . RenderingModule . ReflectionPartiallySubmergedObjects . ViewingFrustumHeightScalingFactor = 1f ; Water Emission Effect \u00b6 If the water material is using one of the lit shaders, then we can set an Emission Color and also tweak its Intensity under the Emission Properties in the water material inspector. Info The asset comes with 5 lit shaders, 3 for the Builtin Render Pipeline (Pixel-Lit, Vertex-Lit, Vertex-Lit-Only-Directional-Lights), 1 for the Universal Render Pipeline (URP) , and another one for the Lightweight Render Pipeline (LWRP) . Rendering Properties \u00b6 Rendering Properties - Material Inspector \u00b6 Under the Rendering Options in the water material inspector, the Mask Interaction property controls how the water object behaves when interacting with a Sprite Mask or with the Mesh Mask . We can set the mask interaction to one of the following options: None : No interaction Visible Inside Mask : the water is visible where the Sprite Mask or the Mesh Mask overlays it, but not outside of it. Visible Outside Mask : the water is visible outside the Sprite Mask or the Mesh Mask, but not inside it. The Apply Tint Color(s) On Top Of Texture(s) property controls in which order, the water body and the water surface, tint colors and textures are applied. If this property is toggled on, the textures are applied first and the tint colors are applied second, otherwise textures are applied last. Rendering Properties - Component Inspector \u00b6 Under the Rendering Properties in the water component inspector, the Far Clip Plane property sets the furthest point relative to the water object that gets included in the water refraction/reflection rendering. The Render Pixel Lights property controls whether or not the rendered objects are affected by pixel lights. Info The Render Pixel Lights property is ignored when working with the URP/LWRP. We can also activate/deactivate the High Dynamic Range (HDR) and the Multisample Anti-Aliasing (MSAA) rendering. Info The MSAA rendering is activated only if the Antialiasing is enabled in the project quality settings or in the URP/LWRP settings asset. Script Reference 1 2 3 4 waterObject . RenderingModule . FarClipPlane = 10f ; waterObject . RenderingModule . RenderPixelLights = true ; waterObject . RenderingModule . AllowMSAA = false ; waterObject . RenderingModule . AllowHDR = false ; Note The Sorting Properties and the Mesh Mask Properties are discussed in the Getting Started section of this guide.","title":"Water Visuals"},{"location":"water-system/water-visuals/#tweaking-the-water-visuals","text":"","title":"Tweaking The Water Visuals"},{"location":"water-system/water-visuals/#what-well-cover-on-this-page","text":"Water Body Properties Water Surface Properties Water Refraction Properties Water Reflection Properties Water Fake Perspective Effect Properties Water Emission Effect Properties Water Rendering Properties Properties","title":"What we'll cover on this page?"},{"location":"water-system/water-visuals/#water-body","text":"","title":"Water Body"},{"location":"water-system/water-visuals/#body-color","text":"We can set the water body color to either a Solid Color or a Gradient Color . If we choose to use a Gradient Color , the Gradient Offset property controls how much to shift the gradient-line midpoint position (where the middle of the color transition should be). Info The Gradient Offset property range: -0.5 \u2192 0.5","title":"Body Color"},{"location":"water-system/water-visuals/#body-texture","text":"We can apply a texture across the water body. Warning The texture should have its wrap-mode set to Repeat or Mirror in the texture import settings.","title":"Body Texture"},{"location":"water-system/water-visuals/#body-texture-sheet-properties","text":"This texture could be a regular texture, or a texture-sheet (a texture consisting of many frames) by toggling the Is A Texture Sheet property on, and then specifying the number of columns and rows and also setting how many frames to play per second.","title":"Body Texture Sheet Properties"},{"location":"water-system/water-visuals/#body-texture-opacity","text":"The Opacity property controls the visibility of the texture.","title":"Body Texture Opacity"},{"location":"water-system/water-visuals/#body-texture-scrolling-speed","text":"We can make the texture scroll, in the X and/or the Y directions, by tweaking the Scrolling Speed property.","title":"Body Texture Scrolling Speed"},{"location":"water-system/water-visuals/#body-texture-tiling-mode","text":"Regarding the texture tiling properties, there are two tiling modes: Stretch: The texture stretches when the water object size changes, always keeping the same number of tiles we specify for the X and Y directions. Repeat: The texture repeats when the water object size changes. In this mode, we specify the scale in units of a single tile.","title":"Body Texture Tiling Mode"},{"location":"water-system/water-visuals/#body-texture-offset","text":"We can provide a texture offset regardless of the selected texture Tiling Mode .","title":"Body Texture Offset"},{"location":"water-system/water-visuals/#body-texture-distortion-effect","text":"","title":"Body Texture Distortion Effect"},{"location":"water-system/water-visuals/#distortion-scale-offset","text":"The Mathf.PerlinNoise(x,y) function is used to sample the Perlin noise texture values. The Scale and Offset properties controls the sampled area size and origin, respectively. Warning The Scale And Offset properties are used to generate the noise texture (which actually happens only in the editor), and as such they are not animatable.","title":"Distortion Scale - Offset"},{"location":"water-system/water-visuals/#distortion-strength","text":"The Strength property, as the name suggests, controls how strong the distortion effect is.","title":"Distortion Strength"},{"location":"water-system/water-visuals/#distortion-speed","text":"The Speed property controls the noise texture scrolling speed.","title":"Distortion Speed"},{"location":"water-system/water-visuals/#distortion-tiling","text":"The Tiling property controls the scale of a noise texture tile relative to a water body texture tile. Example A value of 0.5 , for both the X and Y axis, will apply the noise texture across 4 water body texture tiles. Tip We can use the Tiling property to lower the distortion strength across one axis, and keep the full strength across the other.","title":"Distortion Tiling"},{"location":"water-system/water-visuals/#water-surface","text":"","title":"Water Surface"},{"location":"water-system/water-visuals/#surface-thickness","text":"The Thickness property sets the thickness of the surface line. The thickness can be either Absolute or Relative to the water height. Script Reference 1 2 3 4 waterObject . MaterialModule . HasAbsoluteSurfaceThickness = true ; waterObject . MaterialModule . SurfaceThickness = 0.1f ; // or match the surface level to a world space position waterObject . MaterialModule . SurfaceThickness = waterObject . MaterialModule . TransformPointWorldSpaceToSurfaceThickness ( worldPoint ); Note We will look into the Submerge Level property later when we go through the water fake perspective effect properties, here .","title":"Surface Thickness"},{"location":"water-system/water-visuals/#surface-color-and-texture","text":"Just like the water body, we can tweak the surface tint color and apply a texture across the surface. The description of the surface color and texture properties is exactly the same as the water body texture properties, as discussed here .","title":"Surface Color and Texture"},{"location":"water-system/water-visuals/#water-refraction","text":"Script Reference 1 waterObject . MaterialModule . IsRefractionEnabled = true ;","title":"Water Refraction"},{"location":"water-system/water-visuals/#refraction-bending","text":"The bending property controls how much we would like to shift the submerged portion of an object relative to the other portion above the water. Example","title":"Refraction Bending"},{"location":"water-system/water-visuals/#refraction-distortion-effect","text":"The refraction distortion properties description is the same as the water body distortion effect properties, discussed here .","title":"Refraction Distortion Effect"},{"location":"water-system/water-visuals/#refraction-layers","text":"We select which layers to include in the refraction rendering using the Objects To Render property under the Refraction Properties in the water component inspector. Script Reference 1 waterObject . RenderingModule . Refraction . CullingMask = LayerMask . GetMask ( \"Default\" );","title":"Refraction Layers"},{"location":"water-system/water-visuals/#refraction-render-texture-properties","text":"If the Use Fixed Size property is toggled on, the Size property sets the refraction render-texture width and height. Script Reference 1 2 waterObject . RenderingModule . Refraction . RenderTextureUseFixedSize = true ; waterObject . RenderingModule . Refraction . RenderTextureFixedSize = 512 ; But, if the Use Fixed Size property is toggled off, the refraction render-texture will have a dynamic size, and the render-texture width and height are in this case equal to the the water object visible area on screen width and height. We can even downscale this computed size by lowering the Resizing Factor property value. Script Reference 1 2 waterObject . RenderingModule . Refraction . RenderTextureUseFixedSize = false ; waterObject . RenderingModule . Refraction . RenderTextureResizingFactor = 0.75f ; Lastly, We can set the refraction render-texture Filter Mode property to either Bilinear or Point . Script Reference 1 waterObject . RenderingModule . Refraction . RenderTextureFilterMode = FilterMode . Bilinear ;","title":"Refraction Render-Texture Properties"},{"location":"water-system/water-visuals/#water-reflection","text":"Script Reference 1 waterObject . MaterialModule . IsReflectionEnabled = true ;","title":"Water Reflection"},{"location":"water-system/water-visuals/#reflection-visibility","text":"We control the visibility of the rendered reflection image under the Reflection Properties in the water material inspector.","title":"Reflection Visibility"},{"location":"water-system/water-visuals/#reflection-fade","text":"We can make the reflection fade vertically along the water object, starting from the top at full opacity. To do this, we toggle the Fade property on, and proceed to select the desired fade speed : Linear Exponential - Two Exponential - Three Exponential - Four","title":"Reflection Fade"},{"location":"water-system/water-visuals/#reflection-distortion-effect","text":"The reflection distortion properties description is the same as the water body distortion effect properties, as discussed here .","title":"Reflection Distortion Effect"},{"location":"water-system/water-visuals/#reflection-layers","text":"We use select which layers to include in the reflection rendering using the Objects To Render property under the Reflection Properties in the water component inspector. Script Reference 1 waterObject . RenderingModule . Reflection . CullingMask = LayerMask . GetMask ( \"Default\" , \"TransparentFX\" );","title":"Reflection Layers"},{"location":"water-system/water-visuals/#reflection-render-texture-properties","text":"If the Use Fixed Size property is toggled on, the Size property sets the reflection render-texture width and height. Script Reference 1 2 waterObject . RenderingModule . Reflection . RenderTextureUseFixedSize = true ; waterObject . RenderingModule . Reflection . RenderTextureFixedSize = 512 ; Otherwise, the refraction render-texture will have a dynamic size, and the render-texture width and height are equal to the the water object visible area on screen width and height. We can even downscale this computed size by lowering the Resizing Factor property value. Script Reference 1 2 waterObject . RenderingModule . Reflection . RenderTextureUseFixedSize = false ; waterObject . RenderingModule . Reflection . RenderTextureResizingFactor = 0.75f ; Lastly, We can set the reflection render-texture Filter Mode property to either Bilinear or Point . Script Reference 1 waterObject . RenderingModule . Reflection . RenderTextureFilterMode = FilterMode . Bilinear ;","title":"Reflection Render-Texture Properties"},{"location":"water-system/water-visuals/#reflection-frustum-properties","text":"","title":"Reflection Frustum Properties"},{"location":"water-system/water-visuals/#frustum-z-offset","text":"The Z-Offset property controls where to start rendering the water reflection relative to the water object position. This might be useful if we would like to render the reflection of certain objects that are in front of the water object. Script Reference 1 waterObject . RenderingModule . ReflectionZOffset = 0f ;","title":"Frustum Z-Offset"},{"location":"water-system/water-visuals/#frustum-height-scaling-factor","text":"The reflection frustum size is equal to the visible water area size. We can expand this frustum vertically by setting the Height Scaling Factor property. Tip We can visualize the reflection frustum bounds in the scene-view by toggling the 'eye icon' on. Script Reference 1 waterObject . RenderingModule . Reflection . ViewingFrustumHeightScalingFactor = 2f ;","title":"Frustum Height Scaling Factor"},{"location":"water-system/water-visuals/#water-fake-perspective-effect","text":"The fake perspective effect consists of rendering certain objects that intersect the submerge level as partially submerged into water, adding a sense of depth to the water. We can enable this effect under the Surface Properties in the water material inspector by toggling the Submerge Level property on and adjusting the submerge level position. Script Reference 1 2 3 4 5 waterObject . MaterialModule . IsFakePerspectiveEnabled = true ; waterObject . MaterialModule . SubmergeLevel = 0.75f ; // or match the submerge level to a world space position waterObject . MaterialModule . SubmergeLevel = waterObject . MaterialModule . TransformPointWorldSpaceToSubmergeLevel ( worldPoint );","title":"Water Fake Perspective Effect"},{"location":"water-system/water-visuals/#fake-perspective-effect-layers","text":"","title":"Fake Perspective Effect Layers"},{"location":"water-system/water-visuals/#fake-perspective-effect-refraction-layers","text":"Under the Refraction Properties in the water component inspector, we set the Partially submerged Objects property to select which objects layers to render as partially submerged into water when they intersect the submerge level. Script Reference 1 waterObject . RenderingModule . RefractionPartiallySubmergedObjects . CullingMask = LayerMask . GetMask ( \"Default\" , \"TransparentFX\" );","title":"Fake Perspective Effect - Refraction Layers"},{"location":"water-system/water-visuals/#fake-perspective-effect-reflection-layers","text":"If we would like to render the reflection of certain partially submerged objects, we make sure to select their layers under the Reflection Properties in the water component inspector. Script Reference 1 waterObject . RenderingModule . ReflectionPartiallySubmergedObjects . CullingMask = 0 ;","title":"Fake Perspective Effect - Reflection Layers"},{"location":"water-system/water-visuals/#fake-perspective-effect-reflection-view-frustum-properties","text":"We can expand the partially submerged objects reflection frustum as well as the other objects reflection frustum vertically by settings their respective scaling factors properties. Tip We can visualize the reflection frustums bounds in the scene-view by toggling the 'eye icon' on. Script Reference 1 waterObject . RenderingModule . ReflectionPartiallySubmergedObjects . ViewingFrustumHeightScalingFactor = 1f ;","title":"Fake Perspective Effect - Reflection View Frustum Properties"},{"location":"water-system/water-visuals/#water-emission-effect","text":"If the water material is using one of the lit shaders, then we can set an Emission Color and also tweak its Intensity under the Emission Properties in the water material inspector. Info The asset comes with 5 lit shaders, 3 for the Builtin Render Pipeline (Pixel-Lit, Vertex-Lit, Vertex-Lit-Only-Directional-Lights), 1 for the Universal Render Pipeline (URP) , and another one for the Lightweight Render Pipeline (LWRP) .","title":"Water Emission Effect"},{"location":"water-system/water-visuals/#rendering-properties","text":"","title":"Rendering Properties"},{"location":"water-system/water-visuals/#rendering-properties-material-inspector","text":"Under the Rendering Options in the water material inspector, the Mask Interaction property controls how the water object behaves when interacting with a Sprite Mask or with the Mesh Mask . We can set the mask interaction to one of the following options: None : No interaction Visible Inside Mask : the water is visible where the Sprite Mask or the Mesh Mask overlays it, but not outside of it. Visible Outside Mask : the water is visible outside the Sprite Mask or the Mesh Mask, but not inside it. The Apply Tint Color(s) On Top Of Texture(s) property controls in which order, the water body and the water surface, tint colors and textures are applied. If this property is toggled on, the textures are applied first and the tint colors are applied second, otherwise textures are applied last.","title":"Rendering Properties - Material Inspector"},{"location":"water-system/water-visuals/#rendering-properties-component-inspector","text":"Under the Rendering Properties in the water component inspector, the Far Clip Plane property sets the furthest point relative to the water object that gets included in the water refraction/reflection rendering. The Render Pixel Lights property controls whether or not the rendered objects are affected by pixel lights. Info The Render Pixel Lights property is ignored when working with the URP/LWRP. We can also activate/deactivate the High Dynamic Range (HDR) and the Multisample Anti-Aliasing (MSAA) rendering. Info The MSAA rendering is activated only if the Antialiasing is enabled in the project quality settings or in the URP/LWRP settings asset. Script Reference 1 2 3 4 waterObject . RenderingModule . FarClipPlane = 10f ; waterObject . RenderingModule . RenderPixelLights = true ; waterObject . RenderingModule . AllowMSAA = false ; waterObject . RenderingModule . AllowHDR = false ; Note The Sorting Properties and the Mesh Mask Properties are discussed in the Getting Started section of this guide.","title":"Rendering Properties - Component Inspector"},{"location":"waterfall-system/","text":"Getting Started With The Waterfall System \u00b6 Creating A Waterfall Object \u00b6 We create a waterfall object from the Hierarchy's Create menu: 2D Object \u2192 Game2D Water Kit \u2192 Waterfall Object Resizing The Waterfall Object \u00b6 We resize the waterfall object right in the scene view using the Rect Tool, or we can just provide the width and the height in the waterfall component inspector. Script Reference 1 waterfallObject . MainModule . SetSize ( new Vector2 ( width , height )); Sorting The Waterfall Object Relative To Sprites \u00b6 Before trying to sort the waterfall object relative to sprites, we first need to make sure that the Rendering Queue property, under Rendering Options in the waterfall material inspector, is set to Transparent. Note The Rendering Queue property is set to Transparent by default. Then, under the Rendering Properties in the waterfall component inspector, we specify the sorting layer as well as the order within this layer. Script Reference 1 2 waterfallObject . RenderingModule . SortingLayerID = SortingLayer . NameToID ( \"Default\" ); waterfallObject . RenderingModule . SortingOrder = 0 ; Info The Mesh Mask feature is exactly the same as in the water system. Please refer to here for more information about this feature. Info We will look into the other rendering properties later in the Waterfall Visuals section.","title":"Getting Started"},{"location":"waterfall-system/#getting-started-with-the-waterfall-system","text":"","title":"Getting Started With The Waterfall System"},{"location":"waterfall-system/#creating-a-waterfall-object","text":"We create a waterfall object from the Hierarchy's Create menu: 2D Object \u2192 Game2D Water Kit \u2192 Waterfall Object","title":"Creating A Waterfall Object"},{"location":"waterfall-system/#resizing-the-waterfall-object","text":"We resize the waterfall object right in the scene view using the Rect Tool, or we can just provide the width and the height in the waterfall component inspector. Script Reference 1 waterfallObject . MainModule . SetSize ( new Vector2 ( width , height ));","title":"Resizing The Waterfall Object"},{"location":"waterfall-system/#sorting-the-waterfall-object-relative-to-sprites","text":"Before trying to sort the waterfall object relative to sprites, we first need to make sure that the Rendering Queue property, under Rendering Options in the waterfall material inspector, is set to Transparent. Note The Rendering Queue property is set to Transparent by default. Then, under the Rendering Properties in the waterfall component inspector, we specify the sorting layer as well as the order within this layer. Script Reference 1 2 waterfallObject . RenderingModule . SortingLayerID = SortingLayer . NameToID ( \"Default\" ); waterfallObject . RenderingModule . SortingOrder = 0 ; Info The Mesh Mask feature is exactly the same as in the water system. Please refer to here for more information about this feature. Info We will look into the other rendering properties later in the Waterfall Visuals section.","title":"Sorting The Waterfall Object Relative To Sprites"},{"location":"waterfall-system/prefab-utility/","text":"Prefab Utility \u00b6 The prefab utility serves to save the waterfall object as a prefab properly, along with its material and its generated noise texture. We only need to choose where we would like to save the prefab, and then hit the Create Prefab button! Info As of version 1.4.3, dragging the waterfall object to the project view to save it as a prefab is also possible.","title":"Prefab Utility"},{"location":"waterfall-system/prefab-utility/#prefab-utility","text":"The prefab utility serves to save the waterfall object as a prefab properly, along with its material and its generated noise texture. We only need to choose where we would like to save the prefab, and then hit the Create Prefab button! Info As of version 1.4.3, dragging the waterfall object to the project view to save it as a prefab is also possible.","title":"Prefab Utility"},{"location":"waterfall-system/waterfall-simulation/","text":"Tweaking The Waterfall Simulation \u00b6 The waterfall system can interact with multiple water systems it overlaps , disturbing their surfaces and creating ripples. We tweak the waterfall simulation in the waterfall component inspector. Tip We can use the simulation mode to quickly and easily tweak and test the waterfall system simulation properties, in realtime, right in the edit mode without the need to switch to play mode. All we need to do is to press the Enter Simulation Mode button. Affected Water Objects \u00b6 We can set which water object(s) the waterfall can interact with, by tweaking the Water Objects List property. For each water object: We specify the minimum and the maximum disturbance the waterfall could apply to its surface. The Spread property controls the weight of the disturbance. Setting this property to 1 (full weight), the waterfall disturbs all the water surface vertices it overlaps . The Smooth Ripples controls whether or not to disturb a water surface vertex neighbors. We tweak the slider to control the amount of disturbance to apply to the neighbor vertices. Script Reference 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 using Game2DWaterKit.Ripples ; .... waterfallObject . RipplesModule . IsActive = true ; var affectedWaterObject = new WaterfallAffectedWaterObjet { waterObject = waterObjectInstance , minimumDisturbance = 0.25f , maximumDisturbance = 0.35f , spread = 0.071f , smoothRipples = true , smoothingFactor = 0.181f }; waterfallObject . RipplesModule . AffectedWaterObjects . Add ( affectedWaterObject ); Time Interval Properties \u00b6 We could specify a fixed time interval, or just provide the minimum and the maximum time intervals and let the waterfall system pick a random time interval. Script Reference 1 2 3 4 waterfallObject . RipplesModule . RandomizeTimeInterval = true ; //waterfallObject.RipplesModule.TimeInterval = 1f; waterfallObject . RipplesModule . MinimumTimeInterval = 1f ; waterfallObject . RipplesModule . MaximumTimeInterval = 1f ; Continue Creating Ripples When Off-Screen Property \u00b6 The Continue creating ripples when off-screen property controls whether or not the waterfall system keeps creating ripples even when the waterfall object is not visible to any camera. Script Reference 1 waterfallObject . RipplesModule . UpdateWhenOffscreen = true ;","title":"Waterfall Simulation"},{"location":"waterfall-system/waterfall-simulation/#tweaking-the-waterfall-simulation","text":"The waterfall system can interact with multiple water systems it overlaps , disturbing their surfaces and creating ripples. We tweak the waterfall simulation in the waterfall component inspector. Tip We can use the simulation mode to quickly and easily tweak and test the waterfall system simulation properties, in realtime, right in the edit mode without the need to switch to play mode. All we need to do is to press the Enter Simulation Mode button.","title":"Tweaking The Waterfall Simulation"},{"location":"waterfall-system/waterfall-simulation/#affected-water-objects","text":"We can set which water object(s) the waterfall can interact with, by tweaking the Water Objects List property. For each water object: We specify the minimum and the maximum disturbance the waterfall could apply to its surface. The Spread property controls the weight of the disturbance. Setting this property to 1 (full weight), the waterfall disturbs all the water surface vertices it overlaps . The Smooth Ripples controls whether or not to disturb a water surface vertex neighbors. We tweak the slider to control the amount of disturbance to apply to the neighbor vertices. Script Reference 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 using Game2DWaterKit.Ripples ; .... waterfallObject . RipplesModule . IsActive = true ; var affectedWaterObject = new WaterfallAffectedWaterObjet { waterObject = waterObjectInstance , minimumDisturbance = 0.25f , maximumDisturbance = 0.35f , spread = 0.071f , smoothRipples = true , smoothingFactor = 0.181f }; waterfallObject . RipplesModule . AffectedWaterObjects . Add ( affectedWaterObject );","title":"Affected Water Objects"},{"location":"waterfall-system/waterfall-simulation/#time-interval-properties","text":"We could specify a fixed time interval, or just provide the minimum and the maximum time intervals and let the waterfall system pick a random time interval. Script Reference 1 2 3 4 waterfallObject . RipplesModule . RandomizeTimeInterval = true ; //waterfallObject.RipplesModule.TimeInterval = 1f; waterfallObject . RipplesModule . MinimumTimeInterval = 1f ; waterfallObject . RipplesModule . MaximumTimeInterval = 1f ;","title":"Time Interval Properties"},{"location":"waterfall-system/waterfall-simulation/#continue-creating-ripples-when-off-screen-property","text":"The Continue creating ripples when off-screen property controls whether or not the waterfall system keeps creating ripples even when the waterfall object is not visible to any camera. Script Reference 1 waterfallObject . RipplesModule . UpdateWhenOffscreen = true ;","title":"Continue Creating Ripples When Off-Screen Property"},{"location":"waterfall-system/waterfall-size-animation/","text":"It's possible to animate the waterfall size in code using the method AnimateWaterfallSize(targetSize, duration, constraint, wrapMode). targetSize: [Vector2] sets the waterfall target size. duration: [float] sets the animation duration in seconds. constraint: [enum WaterAnimationConstraint] constraints the position of one/multiple waterfall edge(s) WaterAnimationConstraint enum None, Top, Bottom, Left, Right, TopLeft, TopRight, BottomLeft, BottomRight wrapMode: [enum WaterAnimationWrapMode] WaterAnimationWrapMode enum Once: Stops playing the animation once the target size is reached. Loop: The water size is reset to the initial size and the animation is restarted once the target size is reached. PingPong: When the target size is reached, the initial size is set to the new target size and the animation restarts. So the waterfall size will ping-pong back and forth between the initial size and the target size. Example 1 2 3 4 5 6 7 8 9 10 using Game2DWaterKit.Animation ; .... var targetSize = waterfallObject . MainModule . WaterfallSize + new Vector2 ( 0f , 3f ); // increase the waterfall height by 3 units var duration = 2f ; // 2 seconds var constraint = WaterAnimationConstraint . Bottom ; // constraints the position of the bottom edges, so only the top edge \"moves\" var wrapMode = WaterAnimationWrapMode . Once ; // play the animation once waterfallObject . AnimationModule . AnimateWaterfallSize ( targetSize , duration , constraint , wrapMode );","title":"Waterfall Size Animation"},{"location":"waterfall-system/waterfall-visuals/","text":"Tweaking The Waterfall Visuals \u00b6 What we'll cover on this page? \u00b6 Waterfall Body Properties Waterfall Left-Right Edges Properties Waterfall Top-Bottom Edges Properties Waterfall Refraction Properties Waterfall Rendering Properties Waterfall Body Properties \u00b6 Body Color \u00b6 We can set the waterfall body color to either a Solid Color or a Gradient Color . If we choose to use a Gradient Color , the Gradient Offset property controls how much to shift the gradient-line midpoint position (where the middle of the color transition should be). Info The Gradient Offset property range: -0.5 \u2192 0.5 Body Textures \u00b6 We could apply up to 2 textures (main and secondary) across the waterfall body. Warning The texture should have its wrap-mode set to Repeat or Mirror in the texture import settings. By toggling the Alpha Cutoff property on and tweaking the cutoff value, any pixels with the alpha value below the cutoff threshold will be considered invisible. Example Body Texture Sheet Properties \u00b6 The main or the secondary texture could be a regular texture, or a texture-sheet (a texture consisting of many frames) by toggling the Is A Texture Sheet property on, and then specifying the number of columns and rows and also setting how many frames to play per second. Body Texture Opacity \u00b6 The Opacity property controls the visibility of the texture. Body Texture Scrolling Speed \u00b6 We can make the texture scroll vertically by tweaking the Scrolling Speed property. Body Texture Tiling Mode \u00b6 Regarding the texture tiling properties, there are two tiling modes: Stretch: The texture stretches when the waterfall object size changes, always keeping the same number of tiles we specify for the X and Y directions. Repeat: The texture repeats when the waterfall object size changes. In this mode, we specify the scale in units of a single tile. Body Texture Offset \u00b6 We can provide a texture offset regardless of the selected texture Tiling Mode . Body Texture Distortion Effect \u00b6 Distortion Scale - Offset \u00b6 The Mathf.PerlinNoise(x,y) function is used to sample the Perlin noise texture values. The Scale and Offset properties controls the sampled area size and origin, respectively. Warning The Scale And Offset properties are used to generate the noise texture (which actually happens only in the editor), and as such they are not animatable. Distortion Strength \u00b6 The Strength property, as the name suggests, controls how strong the distortion effect is. Distortion Speed \u00b6 The Speed property controls the noise texture scrolling speed. Distortion Tiling \u00b6 The Tiling property controls the scale of a texture noise texture tile relative to a waterfall body texture tile. Example A value of 0.5 , for both the X and Y axis, will apply the noise texture across 4 waterfall body texture tiles. Tip We can use the Tiling property to lower the distortion strength across one axis, and keep the full strength across the other. Waterfall Left-Right Edges Properties \u00b6 Left-Right Edges Thickness And Offset \u00b6 The thickness and offset of the left and right edges can be set to absolute fixed values (specified in Unity units), or values that are relative to the width of the waterfall object (specified in the 0..1 range). Left-Right Edges Texture(s) \u00b6 We can use two different textures for the left and right edges, or we can simply use the same texture for both edges by toggling the Use Same Texture property on. In case we decided to use the same texture, the Flip Texture property controls whether or not we want to flip the texture when it gets applied across the specified edge horizontally. By toggling the Alpha Cutoff property on and tweaking the cutoff value, any pixels with the alpha value below the cutoff threshold will be considered invisible. This might be useful if we would like to add some irregularities to the left and the right edges. Example The description of the left-right edges texture(s) properties is the same as the waterfall body texture properties, as discussed here . Waterfall Top-Bottom Edges Properties \u00b6 Top-Bottom Edges Thickness And Offset \u00b6 The thickness and offset of the top and bottom edges can be set to absolute fixed values (specified in Unity units), or values that are relative to the height of the waterfall object (specified in the 0..1 range). Top-Bottom Edges Texture(s) \u00b6 We can use two different textures for the top and bottom edges, or we can simply use the same texture for both edges by toggling the Use Same Texture property on. In case we decided to use the same texture, the Flip Texture property controls whether or not we want to flip the texture when it gets applied across the specified edge vertically. The description of the top-bottom edges texture(s) properties is the same as the waterfall body texture properties, as discussed here . Waterfall Refraction Effect \u00b6 Under the Refraction Properties in the waterfall material inspector, we set the refraction effect distortion properties. The refraction distortion properties description is the same as the waterfall body distortion effect properties, discussed here . Waterfall Refraction Layers \u00b6 Under the Refraction Properties in the waterfall component inspector, we use the Objects To Render property to select which layers to include in the refraction rendering. Script Reference 1 waterfallObject . RenderingModule . Refraction . CullingMask = LayerMask . GetMask ( \"Default\" , \"TransparentFX\" ); Waterfall Refraction Render-Texture Properties \u00b6 If the Use Fixed Size property is toggled on, the Size property sets the refraction render-texture width and height. Script Reference 1 2 waterfallObject . RenderingModule . Refraction . RenderTextureUseFixedSize = true ; waterfallObject . RenderingModule . Refraction . RenderTextureFixedSize = 512 ; But, if the Use Fixed Size property is toggled off, the refraction render-texture will have a dynamic size, and the render-texture width and height are in this case equal to the the waterfall object visible area on screen width and height. We can even downscale this computed size by lowering the Resizing Factor property value. Script Reference 1 2 waterfallObject . RenderingModule . Refraction . RenderTextureUseFixedSize = false ; waterfallObject . RenderingModule . Refraction . RenderTextureResizingFactor = 0.75f ; Lastly, We can set the refraction render-texture Filter Mode property to either Bilinear or Point . Script Reference 1 waterfallObject . RenderingModule . Refraction . RenderTextureFilterMode = FilterMode . Bilinear ; Rendering Properties \u00b6 Rendering Properties - Material Inspector \u00b6 Under the Rendering Options in the waterfall material inspector, the Mask Interaction property controls how the waterfall object behaves when interacting with a Sprite Mask or with the Mesh Mask . We can set the mask interaction to one of the following options: None : No interaction Visible Inside Mask : the waterfall is visible where the Sprite Mask or the Mesh Mask overlays it, but not outside of it. Visible Outside Mask : the waterfall is visible outside the Sprite Mask or the Mesh Mask, but not inside it. The Apply Tint Color(s) On Top Of Texture(s) property controls in which order the tint colors and textures are applied. If this property is toggled on, the textures are applied first and the tint colors are applied second, otherwise textures are applied last. Rendering Properties - Component Inspector \u00b6 Under the Rendering Properties in the waterfall component inspector, the Far Clip Plane property sets the furthest point relative to the waterfall object position that gets included in the refraction rendering. The Render Pixel Lights property controls whether or not the rendered objects are affected by pixel lights. Info The Render Pixel Lights property is ignored when working with the URP/LWRP. We can also activate/deactivate the High Dynamic Range (HDR) and the Multisample Anti-Aliasing (MSAA) rendering. Info The MSAA rendering is activated only if the Antialiasing is enabled in the project quality settings or in the URP/LWRP settings asset. Script Reference 1 2 3 4 waterfallObject . RenderingModule . FarClipPlane = 10f ; waterfallObject . RenderingModule . RenderPixelLights = true ; waterfallObject . RenderingModule . AllowMSAA = false ; waterfallObject . RenderingModule . AllowHDR = false ; Note The Sorting Properties and the Mesh Mask Properties are discussed in the Getting Started section of this guide.","title":"Waterfall Visuals"},{"location":"waterfall-system/waterfall-visuals/#tweaking-the-waterfall-visuals","text":"","title":"Tweaking The Waterfall Visuals"},{"location":"waterfall-system/waterfall-visuals/#what-well-cover-on-this-page","text":"Waterfall Body Properties Waterfall Left-Right Edges Properties Waterfall Top-Bottom Edges Properties Waterfall Refraction Properties Waterfall Rendering Properties","title":"What we'll cover on this page?"},{"location":"waterfall-system/waterfall-visuals/#waterfall-body-properties","text":"","title":"Waterfall Body Properties"},{"location":"waterfall-system/waterfall-visuals/#body-color","text":"We can set the waterfall body color to either a Solid Color or a Gradient Color . If we choose to use a Gradient Color , the Gradient Offset property controls how much to shift the gradient-line midpoint position (where the middle of the color transition should be). Info The Gradient Offset property range: -0.5 \u2192 0.5","title":"Body Color"},{"location":"waterfall-system/waterfall-visuals/#body-textures","text":"We could apply up to 2 textures (main and secondary) across the waterfall body. Warning The texture should have its wrap-mode set to Repeat or Mirror in the texture import settings. By toggling the Alpha Cutoff property on and tweaking the cutoff value, any pixels with the alpha value below the cutoff threshold will be considered invisible. Example","title":"Body Textures"},{"location":"waterfall-system/waterfall-visuals/#body-texture-sheet-properties","text":"The main or the secondary texture could be a regular texture, or a texture-sheet (a texture consisting of many frames) by toggling the Is A Texture Sheet property on, and then specifying the number of columns and rows and also setting how many frames to play per second.","title":"Body Texture Sheet Properties"},{"location":"waterfall-system/waterfall-visuals/#body-texture-opacity","text":"The Opacity property controls the visibility of the texture.","title":"Body Texture Opacity"},{"location":"waterfall-system/waterfall-visuals/#body-texture-scrolling-speed","text":"We can make the texture scroll vertically by tweaking the Scrolling Speed property.","title":"Body Texture Scrolling Speed"},{"location":"waterfall-system/waterfall-visuals/#body-texture-tiling-mode","text":"Regarding the texture tiling properties, there are two tiling modes: Stretch: The texture stretches when the waterfall object size changes, always keeping the same number of tiles we specify for the X and Y directions. Repeat: The texture repeats when the waterfall object size changes. In this mode, we specify the scale in units of a single tile.","title":"Body Texture Tiling Mode"},{"location":"waterfall-system/waterfall-visuals/#body-texture-offset","text":"We can provide a texture offset regardless of the selected texture Tiling Mode .","title":"Body Texture Offset"},{"location":"waterfall-system/waterfall-visuals/#body-texture-distortion-effect","text":"","title":"Body Texture Distortion Effect"},{"location":"waterfall-system/waterfall-visuals/#distortion-scale-offset","text":"The Mathf.PerlinNoise(x,y) function is used to sample the Perlin noise texture values. The Scale and Offset properties controls the sampled area size and origin, respectively. Warning The Scale And Offset properties are used to generate the noise texture (which actually happens only in the editor), and as such they are not animatable.","title":"Distortion Scale - Offset"},{"location":"waterfall-system/waterfall-visuals/#distortion-strength","text":"The Strength property, as the name suggests, controls how strong the distortion effect is.","title":"Distortion Strength"},{"location":"waterfall-system/waterfall-visuals/#distortion-speed","text":"The Speed property controls the noise texture scrolling speed.","title":"Distortion Speed"},{"location":"waterfall-system/waterfall-visuals/#distortion-tiling","text":"The Tiling property controls the scale of a texture noise texture tile relative to a waterfall body texture tile. Example A value of 0.5 , for both the X and Y axis, will apply the noise texture across 4 waterfall body texture tiles. Tip We can use the Tiling property to lower the distortion strength across one axis, and keep the full strength across the other.","title":"Distortion Tiling"},{"location":"waterfall-system/waterfall-visuals/#waterfall-left-right-edges-properties","text":"","title":"Waterfall Left-Right Edges Properties"},{"location":"waterfall-system/waterfall-visuals/#left-right-edges-thickness-and-offset","text":"The thickness and offset of the left and right edges can be set to absolute fixed values (specified in Unity units), or values that are relative to the width of the waterfall object (specified in the 0..1 range).","title":"Left-Right Edges Thickness And Offset"},{"location":"waterfall-system/waterfall-visuals/#left-right-edges-textures","text":"We can use two different textures for the left and right edges, or we can simply use the same texture for both edges by toggling the Use Same Texture property on. In case we decided to use the same texture, the Flip Texture property controls whether or not we want to flip the texture when it gets applied across the specified edge horizontally. By toggling the Alpha Cutoff property on and tweaking the cutoff value, any pixels with the alpha value below the cutoff threshold will be considered invisible. This might be useful if we would like to add some irregularities to the left and the right edges. Example The description of the left-right edges texture(s) properties is the same as the waterfall body texture properties, as discussed here .","title":"Left-Right Edges Texture(s)"},{"location":"waterfall-system/waterfall-visuals/#waterfall-top-bottom-edges-properties","text":"","title":"Waterfall Top-Bottom Edges Properties"},{"location":"waterfall-system/waterfall-visuals/#top-bottom-edges-thickness-and-offset","text":"The thickness and offset of the top and bottom edges can be set to absolute fixed values (specified in Unity units), or values that are relative to the height of the waterfall object (specified in the 0..1 range).","title":"Top-Bottom Edges Thickness And Offset"},{"location":"waterfall-system/waterfall-visuals/#top-bottom-edges-textures","text":"We can use two different textures for the top and bottom edges, or we can simply use the same texture for both edges by toggling the Use Same Texture property on. In case we decided to use the same texture, the Flip Texture property controls whether or not we want to flip the texture when it gets applied across the specified edge vertically. The description of the top-bottom edges texture(s) properties is the same as the waterfall body texture properties, as discussed here .","title":"Top-Bottom Edges Texture(s)"},{"location":"waterfall-system/waterfall-visuals/#waterfall-refraction-effect","text":"Under the Refraction Properties in the waterfall material inspector, we set the refraction effect distortion properties. The refraction distortion properties description is the same as the waterfall body distortion effect properties, discussed here .","title":"Waterfall Refraction Effect"},{"location":"waterfall-system/waterfall-visuals/#waterfall-refraction-layers","text":"Under the Refraction Properties in the waterfall component inspector, we use the Objects To Render property to select which layers to include in the refraction rendering. Script Reference 1 waterfallObject . RenderingModule . Refraction . CullingMask = LayerMask . GetMask ( \"Default\" , \"TransparentFX\" );","title":"Waterfall Refraction Layers"},{"location":"waterfall-system/waterfall-visuals/#waterfall-refraction-render-texture-properties","text":"If the Use Fixed Size property is toggled on, the Size property sets the refraction render-texture width and height. Script Reference 1 2 waterfallObject . RenderingModule . Refraction . RenderTextureUseFixedSize = true ; waterfallObject . RenderingModule . Refraction . RenderTextureFixedSize = 512 ; But, if the Use Fixed Size property is toggled off, the refraction render-texture will have a dynamic size, and the render-texture width and height are in this case equal to the the waterfall object visible area on screen width and height. We can even downscale this computed size by lowering the Resizing Factor property value. Script Reference 1 2 waterfallObject . RenderingModule . Refraction . RenderTextureUseFixedSize = false ; waterfallObject . RenderingModule . Refraction . RenderTextureResizingFactor = 0.75f ; Lastly, We can set the refraction render-texture Filter Mode property to either Bilinear or Point . Script Reference 1 waterfallObject . RenderingModule . Refraction . RenderTextureFilterMode = FilterMode . Bilinear ;","title":"Waterfall Refraction Render-Texture Properties"},{"location":"waterfall-system/waterfall-visuals/#rendering-properties","text":"","title":"Rendering Properties"},{"location":"waterfall-system/waterfall-visuals/#rendering-properties-material-inspector","text":"Under the Rendering Options in the waterfall material inspector, the Mask Interaction property controls how the waterfall object behaves when interacting with a Sprite Mask or with the Mesh Mask . We can set the mask interaction to one of the following options: None : No interaction Visible Inside Mask : the waterfall is visible where the Sprite Mask or the Mesh Mask overlays it, but not outside of it. Visible Outside Mask : the waterfall is visible outside the Sprite Mask or the Mesh Mask, but not inside it. The Apply Tint Color(s) On Top Of Texture(s) property controls in which order the tint colors and textures are applied. If this property is toggled on, the textures are applied first and the tint colors are applied second, otherwise textures are applied last.","title":"Rendering Properties - Material Inspector"},{"location":"waterfall-system/waterfall-visuals/#rendering-properties-component-inspector","text":"Under the Rendering Properties in the waterfall component inspector, the Far Clip Plane property sets the furthest point relative to the waterfall object position that gets included in the refraction rendering. The Render Pixel Lights property controls whether or not the rendered objects are affected by pixel lights. Info The Render Pixel Lights property is ignored when working with the URP/LWRP. We can also activate/deactivate the High Dynamic Range (HDR) and the Multisample Anti-Aliasing (MSAA) rendering. Info The MSAA rendering is activated only if the Antialiasing is enabled in the project quality settings or in the URP/LWRP settings asset. Script Reference 1 2 3 4 waterfallObject . RenderingModule . FarClipPlane = 10f ; waterfallObject . RenderingModule . RenderPixelLights = true ; waterfallObject . RenderingModule . AllowMSAA = false ; waterfallObject . RenderingModule . AllowHDR = false ; Note The Sorting Properties and the Mesh Mask Properties are discussed in the Getting Started section of this guide.","title":"Rendering Properties - Component Inspector"}]}